Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["SimulationTools",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/guide/SimulationTools"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["Grid Functions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/tutorial/Grid Functions"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["GRIDFUNCTIONS TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Related Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {"DataRegion":>Documentation`HelpLookup[
       "paclet:SimulationTools/tutorial/DataRegion"], "NumericalRelativity":>
       Documentation`HelpLookup[
       "paclet:SimulationTools/tutorial/NumericalRelativity"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"Go to SimulationTools website\"\>":>
       FrontEndExecute[{
         NotebookLocate[{
           URL[None], None}]}], 
       Delimiter, "\<\"Go to wolfram Mathematica website\"\>":>
       FrontEndExecute[{
         NotebookLocate[{
           URL[
           "http://reference.wolfram.com/mathematica/guide/Mathematica.html"],
            None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid"],

Cell[CellGroupData[{

Cell["Grid Functions", "Title"],

Cell[TextData[{
 "SimulationTools provides an interface to grid-based data from numerical \
simulations.  It is currently capable of reading HDF5 files produced by \
Carpet and returns variables as ",
 ButtonBox["DataRegion",
  BaseStyle->"Link",
  ButtonData->"paclet:SimulationTools/ref/DataRegion"],
 " objects."
}], "Text"],

Cell[CellGroupData[{

Cell["Common Arguments", "Section"],

Cell[TextData[{
 "Most of the functions in this package take at least three arguments: ",
 StyleBox["sim,",
  FontSlant->"Italic"],
 " ",
 StyleBox["var",
  FontSlant->"Italic"],
 " and ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[BoxData[GridBox[{
   {"sim", Cell[
    "The name of the simulation containing the data to read", "TableText"]},
   {"var", Cell["The name of the grid variable", "TableText"]},
   {"dims", Cell["\<\
The dimensions to be read.These can be given either as a list of numbers of \
coordinate names ({1,2,3} or \
{\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]z\[CloseCurlyDoubleQuote]}) \
or asa combined string \[OpenCurlyDoubleQuote]xyz\[CloseCurlyDoubleQuote].\
\>", "TableText"]}
  }]], "DefinitionBox"],

Cell["Common arguments to gridfunction functions.", "Caption"],

Cell["The following options can be given:", "Text"],

Cell[BoxData[GridBox[{
   {"Iteration", "0", Cell["The iteration to read", "TableText"]},
   {"Map", "None", Cell["\<\
The map to read (use None for single map data, or an integer for multi-map)\
\>", "TableText"]},
   {"RefinementLevel", "0", Cell[
    "The refinement level to read.", "TableText"]},
   {"TimeLevel", "0", Cell["The time level to read", "TableText"]},
   {"Variable", 
    RowBox[{"First", " ", "in", " ", "file"}], Cell[
    "The variable to read", "TableText"]}
  }]], "DefinitionBox3Col"],

Cell["Common options to gridfunction functions.", "Caption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section"],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadGridFunction[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read a grid function for the variable ",
 StyleBox["var",
  FontSlant->"Italic"],
 " of dimension ",
 StyleBox["dims",
  FontSlant->"Italic"],
 " in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " and return it as a DataRegion."
}], "Text"],

Cell["\<\
This function reads a variable from a simulation and returns it as a single \
DataRegion object. 
1D, 2D and 3D variables are currently supported.  If the file is part of a \
multi-file set, all the files will be used to read the variable.\
\>", "Text"],

Cell["\<\
If there is more than one component (i.e. the data is split into separate \
parts corresponding to different processors), the components will all be read \
and joined together into a single rectangular DataRegion.  If the union of \
the components is not rectangular, the smallest rectangular region \
surrounding all components will be used, and points not in any component will \
take the value None.\
\>", "Text"],

Cell["\<\
If the file appears in more than one segment of a multi-segment simulation, \
the correct segment for the given iteration will be located automatically.  \
In addition to the common options listed above, the following option can be \
given:\
\>", "Text"],

Cell[BoxData[GridBox[{
   {"StripGhostZones", "True", Cell[
    "Remove inter-processor ghost zones from the data", "TableText"]}
  }]], "DefinitionBox3Col"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadIterations[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the iteration numbers present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". If the options Map, RefinementLevel, TimeLevel or Variable are specified, \
then only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadMaps[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the maps present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ".  If the options Iteration, RefinementLevel, TimeLevel or Variable are \
specified, then only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadRefinementLevels[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the refinement levels present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". If the options Iteration, Map, TimeLevel or Variable are specified, then \
only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadTimeLevels[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the timelevels present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". If the options Iteration, Map, RefinementLevel or Variable are specified, \
then only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "FindGridFunctions[",
 StyleBox["sim",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell["\<\
Read the names of variables for which gridfunction data is available in sim.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadGridFunctionDimensions[",
 StyleBox["sim",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell["Read the available dimensions of a gridfunction in sim.", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Section"],

Cell[TextData[{
 "Examine the variable ",
 StyleBox["phi",
  FontSlant->"Italic"],
 " from the simulation ",
 StyleBox["bbh",
  FontSlant->"Italic"],
 " in the x-y plane."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadIterations", "[", 
   RowBox[{
   "$SimulationToolsTestSimulation", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], 
   "]"}], "//", "Short"}]], "Input",
 CellLabel->"In[1]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
   "0", ",", "1024", ",", "2048", ",", "3072", ",", "4096", ",", "5120", ",", 
    
    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", "13312", ",", 
    "14336", ",", "15360", ",", "16384", ",", "17408", ",", "18432"}], "}"}],
  Short]], "Output",
 CellLabel->"Out[1]//Short="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadRefinementLevels", "[", 
  RowBox[{
  "$SimulationToolsTestSimulation", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadMaps", "[", 
  RowBox[{
  "$SimulationToolsTestSimulation", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[3]:="],

Cell[BoxData[
 RowBox[{"{", "None", "}"}]], "Output",
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadTimeLevels", "[", 
  RowBox[{
  "$SimulationToolsTestSimulation", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phi", "=", 
  RowBox[{"ReadGridFunction", "[", 
   RowBox[{
   "$SimulationToolsTestSimulation", ",", "\"\<phi\>\"", ",", "\"\<xy\>\"", 
    ",", 
    RowBox[{"Iteration", "->", "4096"}], ",", 
    RowBox[{"RefinementLevel", "\[Rule]", "3"}]}], "]"}]}]], "Input",
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"DataRegion", "[", 
  RowBox[{"\<\"ML_BSSN::phi\.01\"\>", ",", 
   InterpretationBox[
    RowBox[{"\<\"<\"\>", "\[InvisibleSpace]", "47", 
     "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "87", 
     "\[InvisibleSpace]", "\<\">\"\>"}],
    SequenceForm["<", 47, ",", 87, ">"],
    Editable->False], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.75`"}], ",", "10.75`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.75`"}], ",", "10.75`"}], "}"}]}], "}"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", "phi", "]"}]], "Input",
 CellLabel->"In[6]:="],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
AbG6KYQ=
   "], {{-0.875, -10.875}, {10.875, 10.875}}, {
   0, 0.9458990933887566}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  PlotRangeClipping->True]], "Output",
 CellLabel->"Out[6]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "RELATED TUTORIALS", BaseStyle -> None, 
        Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
        "Preemptive", ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "RelatedTutorialsSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24]]]], "Related Tutorials"}], "RelatedTutorialsSection"],
        BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None,
        Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0],

Cell[TextData[ButtonBox["DataRegion",
 BaseStyle->"Link",
 ButtonData->
  "paclet:SimulationTools/tutorial/DataRegion"]], "RelatedTutorials"],

Cell[TextData[ButtonBox["NumericalRelativity",
 BaseStyle->"Link",
 ButtonData->
  "paclet:SimulationTools/tutorial/NumericalRelativity"]], \
"RelatedTutorials"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Grid Functions",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "SimulationTools`", "keywords" -> {}, "index" -> True, 
    "label" -> "SimulationTools Tutorial", "language" -> "en", "paclet" -> 
    "GridFunctions", "status" -> "None", "summary" -> 
    "Tutorial on working with grid function data.", "synonyms" -> {}, "title" -> 
    "Grid Functions", "windowTitle" -> "Grid Functions", "type" -> "Tutorial",
     "uri" -> "SimulationTools/tutorial/Grid Functions"}, 
  "SearchTextTranslated" -> "", "LinkTrails" -> ""},
TrackCellChangeTimes->False,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

