Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["nrmma",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:nrmma/guide/nrmma"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["CarpetHDF5",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:nrmma/tutorial/CarpetHDF5"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["CARPETHDF5 TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Related Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {"DataRegion":>Documentation`HelpLookup[
       "paclet:nrmma/tutorial/DataRegion"], "NumericalRelativity":>
       Documentation`HelpLookup["paclet:nrmma/tutorial/NumericalRelativity"]},
       
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"Go to nrmma website\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[None], None}]}], 
       Delimiter, "\<\"Go to wolfram Mathematica website\"\>":>
       FrontEndExecute[{
         NotebookLocate[{
           URL[
           "http://reference.wolfram.com/mathematica/guide/Mathematica.html"],
            None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid"],

Cell[CellGroupData[{

Cell["Carpet HDF5", "Title"],

Cell[TextData[{
 "The CarpetHDF5 ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " package provides a simple interface to Carpet HDF5 data from numerical \
simulations.  It reads HDF5 files produced by Carpet and returns variables as \
",
 ButtonBox["DataRegion",
  BaseStyle->"Link",
  ButtonData->"paclet:nrmma/ref/DataRegion"],
 " objects."
}], "Text"],

Cell[CellGroupData[{

Cell["Common Arguments", "Section"],

Cell[TextData[{
 "Most of the functions in this package take at least two arguments: ",
 StyleBox["run",
  FontSlant->"Italic"],
 " and ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". "
}], "Text"],

Cell["run: The name of the run directory containing HDF5 files.", "Text"],

Cell["\<\
var: The name of the file containing grid function data, for example \
gxx.xy.h5.  If there is only one variable in the file, this is sufficient to \
identify the variable. If there is more than one variable, an additional \
Variable argument must be supplied to identify the variable to read.  For \
multi-file data, the .file_X.h5 suffix can be ommitted.\
\>", "Text"],

Cell["The following options can be given:", "Text"],

Cell[TextData[{
 StyleBox["Option\t\t\tDefault\t\t\tDescription",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "\nMap\t\t\tLowest in file\t\tThe map to read (use None for unimap data)\n\
Variable\t\tFirst in file\t\tThe variable to read (for files with more than \
one variable)"
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section"],

Cell["Functions provided by CarpetHDF5.", "Caption"],

Cell[CellGroupData[{

Cell["ReadGridFunction", "Subsection"],

Cell["Common options : Map, Variable", "Text"],

Cell[TextData[{
 "Read a grid function from the file ",
 StyleBox["varfile",
  FontSlant->"Italic"],
 " in ",
 StyleBox["run",
  FontSlant->"Italic"],
 " on refinement level ",
 StyleBox["rl",
  FontSlant->"Italic"],
 " at iteration ",
 StyleBox["it",
  FontSlant->"Italic"],
 " and return it as a DataRegion. If ",
 StyleBox["rl",
  FontSlant->"Italic"],
 " is not given, then it defaults to the coarsest refinement level."
}], "Text"],

Cell[TextData[{
 "This function reads a variable from a Carpet HDF5 file and returns it as a \
single DataRegion object. \n1D, 2D and 3D variables are currently supported.  \
If the file is part of a multi-file set, all the files will be used to read \
the variable. \nIf there is more than one component, the components will all \
be read and joined together into a single rectangular DataRegion.  If the \
union of the components is not rectangular, the smallest rectangular region \
surrounding all components will be used, and points not in any component will \
take the value None.\nIf the file appears in more than one segment, the \
correct segment for the given iteration will be located automatically.\nIn \
addition to the common options listed under ",
 StyleBox["Common Arguments",
  FontSlant->"Italic"],
 ", the following options can be given:"
}], "Text"],

Cell[TextData[{
 StyleBox["Option\t\t\tDefault\t\t\tDescription\n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "StripGhostZones\tTrue\t\t\tRemove the ghost zones from the data"
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadIterations", "Subsection"],

Cell[TextData[{
 "Read the iteration numbers present in the file.  The optional ",
 StyleBox["rl",
  FontSlant->"Italic"],
 " argument specifies the refinement level and defaults to all refinement \
levels. If the options Variable or Map are specified, then only iterations \
corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadMaps", "Subsection"],

Cell["Read the maps present in the file.", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadRefinementLevels", "Subsection"],

Cell["Read the refinement levels present in the file.", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadTimeLevels", "Subsection"],

Cell["Read the timelevels present in the file.", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadVariables", "Subsection"],

Cell["Read the names of the variables present in the file.", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadTimes", "Subsection"],

Cell["Common options : Map, Variable", "Text"],

Cell[TextData[{
 "Read the coordinate time associated with this grid function at iteration ",
 StyleBox["it",
  FontSlant->"Italic"],
 "."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Section"],

Cell[BoxData[
 RowBox[{"<<", "nrmma`"}]], "Input",
 CellLabel->"In[1]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"run", "=", "\"\<bbh\>\""}], ";"}]], "Input",
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"file", "=", "\"\<Psi4r.x.h5\>\""}], ";"}]], "Input",
 CellLabel->"In[3]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadVariables", "[", 
  RowBox[{"run", ",", "file"}], "]"}]], "Input",
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{"{", "\<\"WEYLSCAL4LLAMA::Psi4r\"\>", "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->701728256]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadIterations", "[", 
   RowBox[{"run", ",", "file"}], "]"}], "//", "Short"}]], "Input",
 CellLabel->"In[5]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
   "0", ",", "128", ",", "256", ",", "384", ",", "512", ",", "640", ",", 
    RowBox[{"\[LeftSkeleton]", "2019", "\[RightSkeleton]"}], ",", "259200", 
    ",", "259328", ",", "259456", ",", "259584", ",", "259712", ",", 
    "259840"}], "}"}],
  Short]], "Output",
 CellLabel->"Out[5]//Short=",
 CellID->2114092915]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadRefinementLevels", "[", 
  RowBox[{"run", ",", "file"}], "]"}]], "Input",
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellLabel->"Out[6]=",
 CellID->1442682790]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadMaps", "[", 
  RowBox[{"run", ",", "file"}], "]"}]], "Input",
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->2079276900]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadTime", "[", 
  RowBox[{"run", ",", "file", ",", "4096"}], "]"}]], "Input",
 CellLabel->"In[8]:="],

Cell[BoxData["4.32`"], "Output",
 CellLabel->"Out[8]=",
 CellID->405470669]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadTimeLevels", "[", 
  RowBox[{"run", ",", "file"}], "]"}]], "Input",
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellLabel->"Out[9]=",
 CellID->779921952]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadGridFunction", "[", 
  RowBox[{"run", ",", "file", ",", "4096"}], "]"}]], "Input",
 CellLabel->"In[10]:="],

Cell[BoxData["\<\"DataRegion[WEYLSCAL4LLAMA::Psi4r, {667}, \
\\!\\({\\({\\(\\(-199.8`\\)\\), 199.79999999999995`}\\)}\\)]\"\>"], "Output",
 CellLabel->"Out[10]=",
 CellID->2055549623]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["RELATED TUTORIALS",
 BaseStyle->None,
 Appearance->{Automatic, None},
 Evaluator->None,
 Method->"Preemptive",
 ButtonFunction:>(FrontEndExecute[{
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], All, ButtonCell], 
    FrontEndToken["OpenCloseGroup"], 
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], After, 
     CellContents]}]& )]], "RelatedTutorialsSection",
 WholeCellGroupOpener->True],

Cell[TextData[ButtonBox["DataRegion",
 BaseStyle->"Link",
 ButtonData->"paclet:nrmma/tutorial/DataRegion"]], "RelatedTutorials"],

Cell[TextData[ButtonBox["NumericalRelativity",
 BaseStyle->"Link",
 ButtonData->"paclet:nrmma/tutorial/NumericalRelativity"]], "RelatedTutorials"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CarpetHDF5",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "nrmma`", "keywords" -> {}, "index" -> True, "label" -> 
    "nrmma Tutorial", "language" -> "en", "paclet" -> "CarpetHDF5", "status" -> 
    "None", "summary" -> "Tutorial for the CarpetHDF5 package.", 
    "synonyms" -> {}, "title" -> "CarpetHDF5", "windowTitle" -> "CarpetHDF5", 
    "type" -> "Tutorial", "uri" -> "nrmma/tutorial/CarpetHDF5"}, 
  "SearchTextTranslated" -> "", "LinkTrails" -> ""},
TrackCellChangeTimes->False,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

