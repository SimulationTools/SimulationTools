Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["SimulationTools",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/guide/SimulationTools"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["SimulationTools`GridFunctions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/guide/SimulationTools`GridFunctions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["ReadTimeLevels",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/ref/ReadTimeLevels"]
}], "LinkTrail"],

Cell[CellGroupData[{

Cell["ReadTimeLevels", "ObjectName"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ReadTimeLevels",
        BaseStyle->"Link",
        ButtonData->"paclet:SimulationTools/ref/ReadTimeLevels"], "[", 
       StyleBox[
        RowBox[{"sim", ",", " ", "var", ",", " ", "dims"}], "TI"], "]"}]], 
      "InlineFormula"],
     "\[LineSeparator]reads the timelevels present for the grid function var \
in sim."
    }]]}
  }]], "Usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[
  FrameBox[
   StyleBox[
    RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"],
   StripOnInput->False],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50}],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "Iteration", "Automatic", Cell[
    "The iteration to read from.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "Map", "Automatic", Cell[
    "The map to read from.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "RefinementLevel", "Automatic", Cell[
    "The refinement level to read from.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "StripGhostZones", "False", Cell[
    "Whether to remove ghost zones from the data.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "Variable", "Automatic", Cell[
    "The variable to read. This option is no longer used.", "TableText"]}
  },
  GridBoxAlignment->{
   "Columns" -> {Left, Left, {Left}}, "ColumnsIndexed" -> {}, 
    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True}}}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell"],

Cell[BoxData[""]]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ReadTimeLevels",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "SimulationTools`", 
    "keywords" -> {"ReadTimeLevels", "READTIMELEVELS", "readtimelevels"}, 
    "index" -> True, "label" -> 
    "SimulationTools/SimulationTools`GridFunctions Symbol", "language" -> 
    "en", "paclet" -> "SimulationTools`GridFunctions", "status" -> "None", 
    "summary" -> 
    "ReadTimeLevels[sim, var, dims] reads the timelevels present for the grid \
function var in sim.", 
    "synonyms" -> {"ReadTimeLevels", "READTIMELEVELS", "readtimelevels"}, 
    "title" -> "ReadTimeLevels", "windowTitle" -> "ReadTimeLevels", "type" -> 
    "Symbol", "uri" -> "SimulationTools/ref/ReadTimeLevels"}, 
  "SearchTextTranslated" -> "", "LinkTrails" -> ""},
TrackCellChangeTimes->False,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

