Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["SimulationTools",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/guide/SimulationTools"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["SimulationTools`GridFunctions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/guide/SimulationTools`GridFunctions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["ReadGridFunction",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:SimulationTools/ref/ReadGridFunction"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["SIMULATIONTOOLS`GRIDFUNCTIONS PACLET SYMBOL", "PacletNameCell"], 
    Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"ReadGridFunctionDimensions":>
       Documentation`HelpLookup[
       "paclet:SimulationTools/ref/ReadGridFunctionDimensions"], 
       "FindGridFunctions":>Documentation`HelpLookup[
       "paclet:SimulationTools/ref/FindGridFunctions"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"More About \[RightGuillemet]\"\>",
        StripOnInput->False], {"SimulationTools":>Documentation`HelpLookup[
       "paclet:SimulationTools/guide/SimulationTools"], "GridFunctions":>
       Documentation`HelpLookup["paclet:SimulationTools/guide/GridFunctions"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar"]}
  }]], "AnchorBarGrid"],

Cell["ReadGridFunction", "ObjectName"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ReadGridFunction",
        BaseStyle->"Link",
        ButtonData->"paclet:SimulationTools/ref/ReadGridFunction"], "[", 
       StyleBox[
        RowBox[{"sim", ",", " ", "var", ",", " ", "dims"}], "TI"], "]"}]], 
      "InlineFormula"],
     "\[LineSeparator]reads variable var from sim and returns it as a \
DataRegion object.  dims is a list of the dimensions to read, and these \
dimensions must correspond to available output.  Dimensions in dims can be \
given either as coordinate names (\"x\", \"y\", \"z\") or as numbers (1, 2, \
3).  The order of dims is not important.  Optional arguments: Map -> \
Automatic | mapnum specifies the map for multipatch data files, \
StripGhostZones -> True|False determines whether the ghost zones are removed \
from the variable before it is returned."
    }]]}
  }]], "Usage"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[
  FrameBox[
   StyleBox[
    RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"],
   StripOnInput->False],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50}],

Cell["\<\
Currently, 1D, 2D and 3D HDF5 data is supported, and this data must exist \
either in the simulation directory or one level down.\
\>", "Notes"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "Iteration", "Automatic", Cell[
    "The iteration to read from.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "Map", "Automatic", Cell[
    "The map to read from.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "RefinementLevel", "Automatic", Cell[
    "The refinement level to read from.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "StripGhostZones", "False", Cell[
    "Whether to remove ghost zones from the data.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "TimeLevel", "Automatic", Cell[
    "The time level to read from.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "Variable", "Automatic", Cell[
    "The variable to read. This option is no longer used.", "TableText"]}
  },
  GridBoxAlignment->{
   "Columns" -> {Left, Left, {Left}}, "ColumnsIndexed" -> {}, 
    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True, True}}}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["EXAMPLES",
 BaseStyle->None,
 Appearance->{Automatic, None},
 Evaluator->None,
 Method->"Preemptive",
 ButtonFunction:>(FrontEndExecute[{
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], All, ButtonCell], 
    FrontEndToken["OpenCloseGroup"], 
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], After, 
     CellContents]}]& )]], "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection"],

Cell[CellGroupData[{

Cell["ReadGridFunction[\"bbh\", \"phi\",\"xy\"]", "Input",
 CellLabel->"In[1]:="],

Cell[BoxData[
 RowBox[{"DataRegion", "[", 
  RowBox[{"\<\"ML_BSSN::phi\.01\"\>", ",", 
   InterpretationBox[
    RowBox[{"\<\"<\"\>", "\[InvisibleSpace]", "66", 
     "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "125", 
     "\[InvisibleSpace]", "\<\">\"\>"}],
    SequenceForm["<", 66, ",", 125, ">"],
    Editable->False], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6.`"}], ",", "124.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "124.`"}], ",", "124.`"}], "}"}]}], "}"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[1]:= "]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["SEE ALSO",
 BaseStyle->None,
 Appearance->{Automatic, None},
 Evaluator->None,
 Method->"Preemptive",
 ButtonFunction:>(FrontEndExecute[{
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], All, ButtonCell], 
    FrontEndToken["OpenCloseGroup"], 
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], After, 
     CellContents]}]& )]], "SeeAlsoSection"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["ReadGridFunctionDimensions",
    BaseStyle->"Link",
    ButtonData->"paclet:SimulationTools/ref/ReadGridFunctionDimensions"],
   FontFamily->"Verdana"]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["FindGridFunctions",
    BaseStyle->"Link",
    ButtonData->"paclet:SimulationTools/ref/FindGridFunctions"],
   FontFamily->"Verdana"]], "InlineFormula"]
}], "SeeAlso"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["MORE ABOUT",
 BaseStyle->None,
 Appearance->{Automatic, None},
 Evaluator->None,
 Method->"Preemptive",
 ButtonFunction:>(FrontEndExecute[{
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], All, ButtonCell], 
    FrontEndToken["OpenCloseGroup"], 
    FrontEnd`SelectionMove[
     FrontEnd`SelectedNotebook[], After, 
     CellContents]}]& )]], "MoreAboutSection"],

Cell[TextData[ButtonBox["SimulationTools",
 BaseStyle->"Link",
 ButtonData->"paclet:SimulationTools/guide/SimulationTools"]], "MoreAbout"],

Cell[TextData[ButtonBox["GridFunctions",
 BaseStyle->"Link",
 ButtonData->"paclet:SimulationTools/guide/GridFunctions"]], "MoreAbout"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell"],

Cell[BoxData[""]]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ReadGridFunction",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "SimulationTools`", 
    "keywords" -> {
     "ReadGridFunction", "READGRIDFUNCTION", "readgridfunction"}, "index" -> 
    True, "label" -> "SimulationTools/SimulationTools`GridFunctions Symbol", 
    "language" -> "en", "paclet" -> "SimulationTools`GridFunctions", "status" -> 
    "None", "summary" -> 
    "ReadGridFunction[sim, var, dims] reads variable var from sim and returns \
it as a DataRegion object.  dims is a list of the dimensions to read, and \
these dimensions must correspond to available output.  Dimensions in dims can \
be given either as coordinate names (\"x\", \"y\", \"z\") or as numbers (1, \
2, 3).  The order of dims is not important.  Optional arguments: Map -> \
Automatic | mapnum specifies the map for multipatch data files, \
StripGhostZones -> True|False determines whether the ghost zones are removed \
from the variable before it is returned.", 
    "synonyms" -> {
     "ReadGridFunction", "READGRIDFUNCTION", "readgridfunction"}, "title" -> 
    "ReadGridFunction", "windowTitle" -> "ReadGridFunction", "type" -> 
    "Symbol", "uri" -> "SimulationTools/ref/ReadGridFunction"}, 
  "SearchTextTranslated" -> "", "LinkTrails" -> ""},
TrackCellChangeTimes->False,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

