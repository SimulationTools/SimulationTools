
Tasks for NRMMA package
=======================

HIGH PRIORITY:

LOW PRIORITY:

* Think about deleting old items from the Memo cache if the amount of
  memory used by the cache goes above a certain amount.

* Associate entries in the Memo cache with file names.  If the file is
  modified, the entry gets deleted from the cache because it is
  assumed to be invalid.

* Use PackedArrays in CarpetHDF5.  This should be faster and take up
  significantly less memory.  The down-side is that NaNs and None
  cannot be represented in these.

* Implement functions for doing surface and line integrals on
  DataRegions.

* Make it easy to generate the frames of a movie and then make the
  movie itself.  Would need to have a suitable program installed.
  Could support both ffmpeg and mencoder.

* Add contour and vector plots to DataRegion.

* Can we detect a closed h5mma link and reopen it in the ReadHDF5
  package?

* Separate out the SimFactory-specific parts from RunFiles into a
  SimFactory package.  We could have an abstract interface for reading
  data from different simulation layouts.  There are three different
  possible layouts: SimFactory, plain Cactus, and a user-specified
  list of Cactus directories (for anyone who uses their own directory
  layout).  It should be possible to support all these transparently.

* Some parts of nrmma are Cactus-specific and some are not.  The
  distinction could be made clearer by using a subdirectory for
  anything Cactus-specific.  This would only be necssary if we
  actually supported an alternative to Cactus.

* See if we can get a larger coverage of the output formats provided
  by thorns in the Einstein Toolkit.

* Should NRMMA know about the Einstein Toolkit conventions?  For
  example, we could have ReadMetric[run] which would return
  DataRegions from the gxx variables, or ReadHamiltonianConstraint.

* Should NRMMA be able to give you a list of the variables in a
  simulation that it can read?  This would avoid you having to hunt
  around in the output directories.

* Not really nrmma-specific, but TwoPunctures should output the
  properties of the initial data into a machine-readable file which
  nrmma can then read.  In general we don't want to have to do this by
  reading parameters, and things like the ADM mass and angular
  momentum are not available at the moment from anything other than
  standard output.
