(* Copyright 2010-2012 Ian Hinder and Barry Wardell

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*)

BeginPackage["Error`",
 {
  "Stack`"
 }];

(* UserError::usage = "UserError[message, arg1, arg2, ...] reports an error which is expected to be generated by a correctly-functioning system." *)
(* InternalError::usage = "InternalError[message, arg1, arg2, ...] reports an error which is caused by a bug in NRMMA." *)
Error(*::usage = "Error[message, arg1, arg2, ...] reports an error to the user."*);
ErrorMessage(*::usage = "Error[message, arg1, arg2, ...] reports an error to the user."*);
CatchError(*::usage = "CatchError[expr] evaluates expr, and returns its result unless an error was generated, in which case the error message is displayed."*);
ErrorTag;
ErrorString;
ErrorStack;

Begin["`Private`"];

$errorStack;

Error::badargs = "Bad arguments to Error: `1`"
Error[args___] := (Message[Error::badargs, ToString[{args}, InputForm]]; Abort[];)

SetAttributes[ErrorMessage, HoldFirst];
SetAttributes[ErrorTag, HoldFirst];

ErrorMessage[tag_MessageName, args___] :=
  Throw[{{args}, $errorStack = CurrentStack[]}, ErrorTag[tag]];

Error[s_String, args___] :=
  Throw[{{args}, $errorStack = CurrentStack[]}, ErrorString[s]];

SetAttributes[CatchError, HoldAll];
CatchError[expr_] :=
  Catch[expr, _ErrorTag|_ErrorString, 
        Function[{value,tag}, 
                 If[Head[tag]===ErrorTag,
                    Print[Style[StringForm[tag[[1]],Sequence@@value[[1]]],Darker[Red]]],
                    Print[Style[StringForm[tag[[1]], Sequence@@value[[1]]],Darker[Red]]]];
                 ShowStack[value[[2]]];
                 Abort[]]];

ErrorStack[] := $errorStack /. Hold->HoldForm;

End[];

EndPackage[];
