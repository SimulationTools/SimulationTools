(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     94822,       2061]
NotebookOptionsPosition[     90260,       1896]
NotebookOutlinePosition[     90622,       1912]
CellTagsIndexPosition[     90579,       1909]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DataRegion package", "Title",
 CellChangeTimes->{{3.459169172333535*^9, 3.4591691768425713`*^9}, {
  3.459226336613926*^9, 3.459226338129665*^9}}],

Cell["by Ian Hinder", "Subtitle",
 CellChangeTimes->{{3.459169180066674*^9, 3.45916918146587*^9}}],

Cell[CellGroupData[{

Cell["Initialisation", "Section",
 CellChangeTimes->{{3.4591623020595293`*^9, 3.459162304256665*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.459158306133925*^9, 3.459158313436741*^9}}],

Cell[BoxData["\<\"/Users/barry/Research/Code/nrmma\"\>"], "Output",
 CellChangeTimes->{
  3.4591583343145323`*^9, 3.459163030077656*^9, 3.459163085319682*^9, 
   3.459163306121868*^9, 3.459226361793635*^9, 3.460186297856682*^9, {
   3.4761034829034348`*^9, 3.476103506488287*^9}, 3.476172628731854*^9, 
   3.4762896871470613`*^9, 3.47628974806499*^9, 3.4762898089634542`*^9, {
   3.4765128830805264`*^9, 3.476512911781266*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "\"\<DataRegion.m\>\""}]], "Input",
 CellChangeTimes->{{3.4591583443806057`*^9, 3.459158346652014*^9}, {
   3.459226343330822*^9, 3.459226345346394*^9}, 3.476103481704718*^9, 
   3.476512875936967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 CellChangeTimes->{{3.459166350518454*^9, 3.459166352004354*^9}}],

Cell[TextData[{
 "The \"DataRegion\" ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " package provides a simple representation of a n-D block of numbers on a \
uniform Cartesian coordinate grid. The package uses an abstract type called \
\"DataRegion\" to represent each block.\n\nA DataRegion object is printed in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as DataRegion[varName, dims, dataRange] to avoid printing large quantities \
of data.  To see the full structure, including all the data, use FullForm."
}], "Text",
 CellChangeTimes->{{3.4591663565326357`*^9, 3.45916646538999*^9}, {
  3.4591691557265778`*^9, 3.459169157715364*^9}, {3.459169640148758*^9, 
  3.459169695879444*^9}, {3.459226642284112*^9, 3.459226644425263*^9}, {
  3.459226699296678*^9, 3.459226700685444*^9}, {3.46018633516635*^9, 
  3.460186366749649*^9}, {3.4761026094896393`*^9, 3.4761026544869223`*^9}}],

Cell[CellGroupData[{

Cell["\<\
ReadCarpetHDF5Variable[file, var, it, rl], ReadCarpetHDF5Variable[file, var, \
it, rl, map]\
\>", "Subsection",
 CellChangeTimes->{{3.45974862993289*^9, 3.4597486403965473`*^9}, {
  3.476102680981883*^9, 3.4761026895815496`*^9}}],

Cell[TextData[{
 "This function opens a set of Carpet HDF5 files and loads variable ",
 StyleBox["var,",
  FontSlant->"Italic"],
 " iteration ",
 StyleBox["it",
  FontSlant->"Italic"],
 ", refinement level ",
 StyleBox["rl",
  FontSlant->"Italic"],
 ", coordinate map ",
 StyleBox["map ",
  FontSlant->"Italic"],
 "(if specified and using multipatch data), from the file set and returns it \
as a single DataRegion object.  It is currently assumed that the filename \
given, ",
 StyleBox["file",
  FontSlant->"Italic"],
 ", ends in either the suffix \".file_0.h5\" (with a corresponding set of \
files \".file_<c>.h5\"), or in \".x.<m>.h5\", \".y.<m>.h5\", \".z.<m>.h5\", \
\".d.<m>.h5\".  This set of files is opened, and component c is read from map \
m of each one.  The outermost cctk_nghostzones points are stripped from each \
component, and the components are then merged into a single DataRegion \
object.  If the components are disconnected, a single enclosing cuboid grid \
is created, and points which are not on any of the components are initialised \
to None.  In future, we could detect disconnected components and return a \
list of DataRegion objects for each one.\n\nThe metadata from HDF5 files is \
cached to improve performance. To clear the cache, see the \
ClearCarpetHDF5Cache[file] function.\n\nFor debugging, it can be helpful to \
know which parts of a HDF5 file are being read and when. Specifying the \
option VerboseRead->True, will make ReadCarpetHDF5[...] output verbose \
information about what it is doing. "
}], "Text",
 CellChangeTimes->{{3.459748643036755*^9, 3.4597491094056997`*^9}, {
  3.460186432731646*^9, 3.460186433076812*^9}, {3.4761027010150223`*^9, 
  3.4761029048877277`*^9}, {3.476103757954494*^9, 3.476103803147409*^9}, {
  3.476170619465878*^9, 3.4761707110817213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ClearCarpetHDF5Cache[file]", "Subsection",
 CellChangeTimes->{{3.4761038074593163`*^9, 3.476103813947266*^9}}],

Cell["\<\
To improve performance, the ReadCarpetHDF5Variable[...] function caches some \
information (attributes, dataset names, dimensions) from the HDF5 file. \
Normally, this won't be a problem unless the contents of the HDF5 file \
change. If the file does change, run ClearCarpetHDF5Cache[...] to clear the \
cached data so that it will be read in again the next time \
ReadCarpetHDF5Var[...] is called.\
\>", "Text",
 CellChangeTimes->{{3.4761038210850143`*^9, 3.4761039594473963`*^9}, {
  3.476103995615634*^9, 3.476103998182268*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MakeDataRegion[data, name, dims, origin, spacing]", "Subsection",
 CellChangeTimes->{{3.476104029821822*^9, 3.476104047643776*^9}}],

Cell[TextData[{
 "Manually create a DataRegion object from the list ",
 StyleBox["data.",
  FontSlant->"Italic"],
 " This data is assumed to be in column-major order, eg. ",
 StyleBox["data",
  FontSlant->"Italic"],
 "[[",
 StyleBox["iz",
  FontSlant->"Italic"],
 ",",
 StyleBox["iy",
  FontSlant->"Italic"],
 ",",
 StyleBox["ix",
  FontSlant->"Italic"],
 "]] for the case of 3D data. The DataRegion will name the variable ",
 StyleBox["name",
  FontSlant->"Italic"],
 ", and assumes it has dimensions given by the list ",
 StyleBox["dims, ",
  FontSlant->"Italic"],
 "with origing given by the list ",
 StyleBox["origin",
  FontSlant->"Italic"],
 " and spacing between points given by the list ",
 StyleBox["spacing.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.476104050179311*^9, 3.4761041986877337`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MergeDataRegions[{v1, v2, ...}]", "Subsection",
 CellChangeTimes->{{3.4761044764482327`*^9, 3.4761044867829647`*^9}}],

Cell[TextData[{
 "Merge the DataRegions ",
 StyleBox["v1, v2, ...",
  FontSlant->"Italic"],
 " into a single enclosing data region."
}], "Text",
 CellChangeTimes->{{3.4761044883827877`*^9, 3.476104528397663*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadVTKFile[file]", "Subsection",
 CellChangeTimes->{{3.459166420227751*^9, 3.459166425418956*^9}, 
   3.459169225639839*^9}],

Cell[TextData[{
 "Read the data file from ",
 StyleBox["file",
  FontSlant->"Italic"],
 " in VTK format and return it as a DataRegion object. ",
 StyleBox["file",
  FontSlant->"Italic"],
 " can either be a string, for a filename, or a stream object.  Currently \
there is very little error-checking, and strong assumptions are made about \
the format of the data.  It must be single-precision and in binary, not \
ascii, format."
}], "Text",
 CellChangeTimes->{{3.4591664278353*^9, 3.459166437209776*^9}, {
   3.459166469120769*^9, 3.45916647189682*^9}, {3.4591681102808533`*^9, 
   3.459168180149024*^9}, {3.459169229973385*^9, 3.459169256347968*^9}, 
   3.459226653606936*^9, {3.46018648478004*^9, 3.460186485743762*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ToDataTable[v]", "Subsection",
 CellChangeTimes->{{3.476104238127626*^9, 3.476104246374052*^9}}],

Cell["\<\
Convert a DataRegion to a DataTable object. This only works with 1D \
DataRegions for now.\
\>", "Text",
 CellChangeTimes->{{3.476104251492443*^9, 3.476104298132612*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetData[v]", "Subsection",
 CellChangeTimes->{{3.459166476789226*^9, 3.459166479472549*^9}, {
  3.4591667540604258`*^9, 3.459166754607605*^9}}],

Cell[TextData[{
 "Return a nested list, of depth equal to the dimensionality of the data \
containing the values from the DataRegion object v.  The data is ordered in \
column-major order (the same as Carpet), so when accessing points from the \
list, the array ordering is eg. ",
 StyleBox["data",
  FontSlant->"Italic"],
 "[[",
 StyleBox["iz",
  FontSlant->"Italic"],
 ",",
 StyleBox["iy",
  FontSlant->"Italic"],
 ",",
 StyleBox["ix",
  FontSlant->"Italic"],
 "]] for the case of 3D data.  This means that, for example, extracting a \
slice of constant z-coordinate from 3D data is simple: ",
 StyleBox["data",
  FontSlant->"Italic"],
 "[[",
 StyleBox["iz",
  FontSlant->"Italic"],
 "]]."
}], "Text",
 CellChangeTimes->{{3.459166483424515*^9, 3.459166588784906*^9}, {
   3.459168188109614*^9, 3.45916818858815*^9}, 3.459226654807144*^9, {
   3.476102983557167*^9, 3.476103044851149*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetOrigin[v]", "Subsection",
 CellChangeTimes->{{3.459166596493157*^9, 3.459166599184821*^9}, {
  3.4591667568154*^9, 3.459166757343925*^9}}],

Cell[TextData[{
 "Return a list {",
 StyleBox["o1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["o2",
  FontSlant->"Italic"],
 ", ",
 StyleBox["o3, ...",
  FontSlant->"Italic"],
 "} containing the minimum ",
 StyleBox["x1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["x2, x3,...",
  FontSlant->"Italic"],
 " coordinates of the block."
}], "Text",
 CellChangeTimes->{{3.45916660127666*^9, 3.459166662434268*^9}, {
  3.4761030698845577`*^9, 3.47610308696978*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetSpacing[v]", "Subsection",
 CellChangeTimes->{{3.459166665562337*^9, 3.4591666765218983`*^9}, {
  3.45916675919057*^9, 3.459166759727618*^9}}],

Cell[TextData[{
 "Return a list {",
 StyleBox["dx1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dx2",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dx3, ...",
  FontSlant->"Italic"],
 "} containing the spacing between points in the ",
 StyleBox["x1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["x2, x3, ...",
  FontSlant->"Italic"],
 " directions."
}], "Text",
 CellChangeTimes->{{3.4591666869832697`*^9, 3.459166699233499*^9}, {
  3.4761030954411716`*^9, 3.4761031166086407`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetDimensions[v]", "Subsection",
 CellChangeTimes->{{3.459166708945425*^9, 3.4591667117846613`*^9}, {
  3.459166761947472*^9, 3.459166762487626*^9}}],

Cell[TextData[{
 "Return a list {",
 StyleBox["nx1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["nx2",
  FontSlant->"Italic"],
 ", ",
 StyleBox["nx3, ...",
  FontSlant->"Italic"],
 "} containing the number of points in the ",
 StyleBox["x1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["x2, x3, ...",
  FontSlant->"Italic"],
 " directions."
}], "Text",
 CellChangeTimes->{{3.459166712881168*^9, 3.4591667315686417`*^9}, {
  3.476103123584898*^9, 3.476103139647684*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetNumDimensions[v]", "Subsection",
 CellChangeTimes->{{3.4761029589091263`*^9, 3.476102962805019*^9}}],

Cell["\<\
Return an integer corresponding to the dimensionality of the data.\
\>", "Text",
 CellChangeTimes->{{3.459166712881168*^9, 3.4591667315686417`*^9}, {
  3.4761031551277103`*^9, 3.476103169070689*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetDataRange[v]", "Subsection",
 CellChangeTimes->{{3.4591667675927763`*^9, 3.459166769727097*^9}, {
  3.459168211795905*^9, 3.459168211971346*^9}}],

Cell[TextData[{
 "Return a list of the form {{",
 StyleBox["x1min",
  FontSlant->"Italic"],
 ", ",
 StyleBox["x1max",
  FontSlant->"Italic"],
 "}, {x2",
 StyleBox["min",
  FontSlant->"Italic"],
 ", x2",
 StyleBox["max",
  FontSlant->"Italic"],
 "}, {x3",
 StyleBox["min",
  FontSlant->"Italic"],
 ", x3",
 StyleBox["max",
  FontSlant->"Italic"],
 "}, ...} describing the minimum and maximum coordinates of the block.  This \
list can be used in the DataRange option of various ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " plotting functions."
}], "Text",
 CellChangeTimes->{{3.459168213112483*^9, 3.459168263561729*^9}, {
  3.459226766939542*^9, 3.459226808839546*^9}, {3.476103185144558*^9, 
  3.476103201822332*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetAttributes[v]", "Subsection",
 CellChangeTimes->{{3.476104320286036*^9, 3.47610432468381*^9}}],

Cell["\<\
Return the list of attributes (Variable name, dimensions, origin, spacing, \
dimensionality) of the DataRegion.\
\>", "Text",
 CellChangeTimes->{{3.47610432708335*^9, 3.4761043757381*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetVariableName[v]", "Subsection",
 CellChangeTimes->{{3.4591682727388268`*^9, 3.459168275409294*^9}}],

Cell[TextData[{
 "Return a string containing the variable name of the ",
 "DataRegion",
 " ",
 StyleBox["v",
  FontSlant->"Italic"],
 " as recorded in the original file."
}], "Text",
 CellChangeTimes->{{3.459168276665008*^9, 3.459168294240904*^9}, 
   3.459226656567339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpolation[v, ...]", "Subsection",
 CellChangeTimes->{{3.459169287306786*^9, 3.4591692937731256`*^9}}],

Cell[TextData[{
 "The Interpolation function has been overloaded to work on DataRegion \
objects.  Internally, it uses ListInterpolation with the data and data \
ranges.  You can supply additional options for ListInterpolation to this \
function.  The resulting function will generically be a function of ",
 StyleBox["n",
  FontSlant->"Italic"],
 " variables, where ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is the dimensionality of the data.  Interpolation might not work if the \
DataRegion contains data with value None, as will happen with Carpet data \
with disconnected components."
}], "Text",
 CellChangeTimes->{{3.459169302132865*^9, 3.459169436088748*^9}, 
   3.4592266574302*^9, {3.4592268401042833`*^9, 3.459226845606764*^9}, {
   3.459749184413734*^9, 3.459749220313478*^9}, {3.476103235866592*^9, 
   3.4761032841241693`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SliceData[v, dim, coord:0]", "Subsection",
 CellChangeTimes->{{3.45916830137071*^9, 3.45916830978463*^9}, {
  3.459226855457466*^9, 3.4592268581026497`*^9}, {3.476103289982046*^9, 
  3.476103290187223*^9}}],

Cell[TextData[{
 "Return a DataRegion object which is a slice through v in a plane \
perpendicular to dimension ",
 StyleBox["dim",
  FontSlant->"Italic"],
 ".  ",
 StyleBox["coord",
  FontSlant->"Italic"],
 " is the coordinate value at which to take the slice.  The resulting \
DataRegion object will have a dimensionality of 1 less than that of ",
 StyleBox["v",
  FontSlant->"Italic"],
 ".  To obtain the numerical data, use GetData on the resulting object.  For \
convenience, the coord argument can be omitted, defaulting to 0.0."
}], "Text",
 CellChangeTimes->{{3.459168312152307*^9, 3.459168388749895*^9}, {
  3.459168459493479*^9, 3.459168511970499*^9}, {3.45922665905683*^9, 
  3.459226661004208*^9}, {3.459226868669609*^9, 3.4592268941369257`*^9}, {
  3.459749300156331*^9, 3.4597493034407578`*^9}, {3.460186625941083*^9, 
  3.460186628497991*^9}, {3.476103312863015*^9, 3.476103384240788*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
DataRegionDensityPlot[v,...], DataRegionArayPlot[v,...], \
DataRegionPlot3D[v,...]\
\>", "Subsection",
 CellChangeTimes->{{3.459168523683691*^9, 3.459168532385769*^9}, 
   3.459226663637959*^9, {3.476172282449114*^9, 3.476172305989365*^9}, {
   3.4761724179780893`*^9, 3.476172425569335*^9}}],

Cell[TextData[{
 "These are wrappers for the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 2D data plotting functions.  They operate on 2D DataRegion objects, \
automatically converting the object to a list and setting the data ranges \
appropriately.  You can use any plot arguments which are available in the \
corresponding regular ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " plotting function."
}], "Text",
 CellChangeTimes->{{3.459168534787547*^9, 3.459168605263381*^9}, 
   3.459226664761907*^9, {3.4761033927873573`*^9, 3.476103394104782*^9}, {
   3.476172313390367*^9, 3.476172410427042*^9}, {3.476172470944231*^9, 
   3.4761724830562572`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["DataRegionPlot[v,...]", "Subsection",
 CellChangeTimes->{{3.476170717477374*^9, 3.4761707238578653`*^9}, {
  3.476171749426515*^9, 3.476171749895501*^9}}],

Cell[TextData[{
 "These are wrappers for the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 1D data plotting functions.  They operate on 1D DataRegion objects, \
automatically converting the object to a list and setting the data ranges \
appropriately.  You can use any plot arguments which are available in the \
corresponding regular ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " plotting function."
}], "Text",
 CellChangeTimes->{{3.4761707346819963`*^9, 3.476170749505146*^9}, {
  3.47617244630871*^9, 3.476172485855754*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuickSlicePlot[v, {min, max}, colorMap,...]", "Subsection",
 CellChangeTimes->{{3.4591686354147882`*^9, 3.459168652494953*^9}}],

Cell["\<\
This provides a quick way to plot a 2D DataRegion.  It displays coordinates \
as well as a colormap key.  min and max correspond to the minimum and maximum \
values in the data to assign to 0 and 1 in the color map.  colorMap defaults \
to \"TemperatureMap\"; use ColorData[\"Gradients\"] to get the list of \
possible color maps.\
\>", "Text",
 CellChangeTimes->{{3.459168655013687*^9, 3.4591687316191998`*^9}, {
   3.4591687925861807`*^9, 3.459168800718069*^9}, 3.4592266682161427`*^9, {
   3.4761034157139387`*^9, 3.476103419543874*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Outline[v]", "Subsection",
 CellChangeTimes->{{3.476104408700145*^9, 3.476104412816621*^9}}],

Cell["\<\
Produce a Graphics object (Line, Rectangle or Cuboid) with shape \
corresponding to that of the DataRegion.\
\>", "Text",
 CellChangeTimes->{{3.476104415176783*^9, 3.476104443296185*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes", "Section",
 CellChangeTimes->{{3.459169054485798*^9, 3.4591690562173986`*^9}, {
  3.459169092773025*^9, 3.4591690934040537`*^9}}],

Cell["\<\
Interpolation on a DataRegion object with one of the dimensions small needs \
to be fixed.\
\>", "Item",
 CellChangeTimes->{{3.459226952306826*^9, 3.459226983641799*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["DataRegion Example", "Section",
 CellChangeTimes->{{3.459169555544169*^9, 3.459169558382086*^9}, {
  3.45922701103588*^9, 3.459227012032732*^9}, {3.4592279484789467`*^9, 
  3.459227978313953*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gxx", "=", 
  RowBox[{"ReadCarpetHDF5Variable", "[", 
   RowBox[{
   "\"\<sch_3c/output-0000/sch_3c/admbase::metric.file_0.h5\>\"", ",", 
    "\"\<ADMBASE::gxx\>\"", ",", "0", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.459745588253035*^9, 3.4597456331215057`*^9}, {
  3.4597460339171343`*^9, 3.459746036140551*^9}, {3.459746757457088*^9, 
  3.459746760535542*^9}, {3.460186764522187*^9, 3.46018677399263*^9}}],

Cell[BoxData["\<\"DataRegion[ADMBASE::gxx, {47, 47, 47}, {{-2.875, 2.875}, \
{-2.875, 2.875}, {-2.875, 2.875}}]\"\>"], "Output",
 CellChangeTimes->{
  3.459745636175846*^9, 3.459745718989902*^9, {3.459746031126423*^9, 
   3.459746037003409*^9}, 3.4597461313850727`*^9, 3.459746209343247*^9, 
   3.4597464318798037`*^9, 3.459746720206242*^9, 3.45974859586939*^9, 
   3.4601867774164333`*^9, 3.476103574729025*^9, 3.476172629661215*^9, 
   3.476289687367323*^9, 3.4762897482777767`*^9, 3.476289809500746*^9, 
   3.476512883418851*^9, 3.4765129137305937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gxxSlice", "=", 
  RowBox[{"SliceData", "[", 
   RowBox[{"gxx", ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.460186787325933*^9, 3.460186788687213*^9}, {
  3.476103599163405*^9, 3.4761036084266987`*^9}}],

Cell[BoxData["\<\"DataRegion[ADMBASE::gxx, {47, 47}, {{-2.875, 2.875}, \
{-2.875, 2.875}}]\"\>"], "Output",
 CellChangeTimes->{
  3.459746047211752*^9, 3.4597467460525637`*^9, 3.4597485985824633`*^9, {
   3.460186783259597*^9, 3.4601867895367823`*^9}, {3.476103591057437*^9, 
   3.476103608856223*^9}, 3.476172629694314*^9, 3.47628968741425*^9, 
   3.476289748311953*^9, 3.476289809532391*^9, 3.4765128834551907`*^9, 
   3.476512913836594*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuickSlicePlot", "[", 
  RowBox[{"gxxSlice", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.459173005229875*^9, 3.4591730616255074`*^9}, {
  3.460186794333597*^9, 3.46018679550908*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1:eJztXWk4Ve33llISkSFDE6WkRCjNrZAMIRooKkUUpRSVUJI5pBRlpowRKSlT
lEakVMrcYD77HIcMaeK/XNf/6/p9e7/58F5ed9uz17rXfa/1PMd2jpz1sa22
43l4eFT+/7/R//cpjdzdEs6FHEHmq2IyF+oqZ/tfT2PgxnrDfDPEe68kPOIm
ceGGAZ/2vRwGWvkEhR5c4wL7hm9TJuKvbE9EKhYxcNWmf92/q1zwU+Jv2Ie4
Vrd0ufArBnTmpNoqI/6wt9V0CuLDZi8fO9cwsP9SfptuGK5zIZIn8xYXwK7+
kVUrA2/mGnvqX+FCx4sFb7QQN/q5qPxzPwMdIr6O6pfx+76Rt29vcsFloH52
7UQ2rMkVuDAxlAtl4XVW2xD/tnK6/DYZNhTXXNR6FoLxa32eVZXIBct14xJU
VNhg77qS71gwF4LbzMdpIt6xqb12kw4bNDz6JwsEYXx6u63vJHBBw/tAv/Vu
NgD3b3BkIPIzR3OcBOL2Uq+erHNhw5bc0LdzA7iwXMlUwC2eC9m9nEXng9kg
deWeaKYfF0qqYsS+xHHhx5uSi0+T2PB4etD5tb5ccA+IFtNF/PeLLPlLRWzY
nOM1rtGbCy02J7Y8iOXC0W1CjNUHNhi5cv6EXeDC4p5dG5Yg7vJIIT2zkw0N
xRoj9l5cmLzaz+leDBfMPtzzav/Dhjf9Invtz3Ph0BMRUz3EN/1y9vUW5IBm
u+7jG55cyGoMm/IjerQOGYMTZDgg7iebOnwO83dU3HYP8XXJUknD8zgQu4GR
SkC8+J3OqiDEB5KjM2Yt4sBj7/iV5xGfU/9S4BziomIfe5Yo0ddT61PxUPFT
+VL8UHxS/FP1oupL6YHSD6U3Sp+Unin9U36h/EX5kfIv5XeqP1D9ZI5tvtGp
61w4UmTt9Q7xbtGuIq9LDJRdmJ/1I4ILx/7aikUhnnSqRmzSdYzzRM6xnYgv
Uy8ysEBc/V2I4fhEBiKsiqVTcP2z/SlBIogfYj14dSmTgePJ56zqMc5DYgGG
RRjPUj9fsZJ8BoYKH2v0Y158V/Tn7EFczOjDoWTMS9R05McP5CfuQ0TRD+RH
pF2vz7COgfSf7Qc+IZ/PdzSInEXc7mFk2SOGgefmB//FIf95iRUGf5H/k0kj
gd9GGChSPN5nhPX6kfaX5YT4q8cH5t+XwDqe0HZow/rabin80ID1jZxwfqHA
EjYc9HcLP4R6+Jc1YL4e8Zse4JODehAJEvzccJELFt6JulGon+ezaiL2WbFB
Ms/z/UbUm9y4rJ+9qMPKHlNO/hk28LCmOt3250J+kIm2HuLKupeFN19jg52T
Tbk46tlJ7pRPAup5sdvU7JAsNuz7upk3xIcLjkrOXsPoi/BpjT6sl2zIUokb
mIl+EVj00tgOcQ0LM6HHX9gQs39LXRX6zsxtSL4RfZeydZKc1QAbxteEFWSi
T9uez1Q6gLhWndliBX4OnJcU5pagrznx1ht4ET8mc/WMuyQHDC0XnhdBPLI8
LDcf/X5w97GGT3M5MF91XkIS9gfNO7ekQhCPPWmZ8F6R7jPU9dT6VDxU/FS+
FD8UnxT/VL2o+lJ6oPRD6Y3SJ6VnSv+UXyh/UX6k/Ev5neoPVD+5NmGb07xI
7D8uxYNeKVyYMjuqIf8EA3rNTxMzbnBhYUjmYRPExQOW7XV3Y6A/6WjeDMQd
C3g7xUfxW97uld4MfJ2vUn4c1+/Qv3irCtef9kctqBLXv7+1RSoT4zl9Z3OL
B+JLs5a/vxHNwKG1EpKvMa+9hx6Pn4N4uYEFy+A2A7JOLpdfIg/ugTa+ucjD
I1fV14MFDHgePFCZgrw9i2+ZsQ5xzuGV1mlvGAjns3lkhzxbml0veYQ8f+Eq
du77zoDm1O2S/FgX5WXTnyggHmahViz2i4EGmWf3g7G+Qo4jTRexjsEVQ6q3
prHh3fCvKz9RD3/Us3a0oB6mVDbpNi1mg0ST1iwj1I8778AfNcTNVA2euuqy
IZXfxeAq6i0i0VrXA/Vm01nFEj2AczPAIa0a5+CSe+I7n6I+nfYUeCp7sWGl
foHZNNRzybmmPn7E04fcjJfFsSF22oqG3ThnY/xzXbaj/m8Y7es7WcCGtZye
dyXoI8GFGqnp6JfuTyuk1GvY4Ob8/egmnONaR1xvCCG+6+EX40QOGypt3nb9
RZ92DaVs90U/Ks/tNBrk5cACWanCbvT1+qlOURKIhwxYc5zFOSAa7d44H/FD
lU2BT7EPBITObXCR44Cns4vQbewb1XYLzUMRz8t6nu36P/oMdT21PhUPFT+V
L8UPxSfFP1Uvqr6UHij9UHqj9EnpmdI/5RfKX5QfKf9Sfqf6A9VPnjJrtjJR
yPvkm+7rU5GnhpRcjR0MVCSND7yA+NLpDxeIIT5f+6fuiCUDE0S9tvAgftCw
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
KH1Seqb0T/mF8hflR8q/lN+p/kD1E8GnPJ/k8XrjlZaFfxB3k80yuaHcBXeE
vnf74fp+h6r5hnCdcMWJjtKTumDOprXq4hiP6uDORRMxnsYvzdJvG3FevNDf
/A7jv2UtnamA8cv2ehZ6ZON5gadw6DHmuzT8idRezFfTdo1I67lOGEmYxGlB
fgqXbP55G+OacHZVy0uDTrhWbO2lhf1/g7/KbWGMK8rmVF6PaCeEsavXNeEc
yWk9uC4E9fhKIDhi2ecOyOOJn/bgI8Yz0CEmj3V0e13H53O9AxYZCAq9wrqP
N87e9wHrLnZFYubItg6wXJiefhjx/W6zr4ni9Y5uQrsPtLWD/ouyri2oN6Hf
+bfv433tXqf8LDnSDnOzbsxSQz0LMT+tTDBO8bbjGWv72sBvVazcHNSPU6y4
xgTMt+bX8m1bz7VBl9BQvRLGc3Gga9ww8gY2AhImkm0wU/+5tecHLryP3/jr
IvJslfJg+NKbVjD8OW2ZCeK/Fy+YugDxuGO5bp75rXBzj82yQcQvdZ6ZFYjr
hNxKuyvG0waxZ1aXduJ9K874utwfPWe/Pm415SOeKoR/XhauHX3eLG26P+Zr
J5Dk2WPVAfp3EvTy8fuR/ntXvqJOFr2yeJ/zvRNWtbnyXb+F8zHznfVH9P3H
wQR/n+csGJbt2b4bzzsdZ0/e/YPnmE17lpssc6X7DHU9tT4VDxU/lS/FD8Un
xT9VL6q+lB4o/VB6o/RJ6ZnSP+UXyl+UHyn/Un6n+gPVTx4uiYjLxLiHVoY9
jsXr1R8XnFiDc0SqOf6qFuZvnCfino16WDr8UmY/qxM0xcwFhTCeB1FN3Z/w
vsf7DE/JFnXCA/HCj9MwfqGMJM/pGH/B7Fhn6Yud8MdwgYM55ms12b7RCfOV
8K/0/bqtEwpLQ3jbsD+rn/Xh6cL+zG28ojQs1QnqEfV+T5FPO0NT1QsYl+t6
likX97E5qetdhpD/d6fcewH5L8qx2qRwtQM61w7MMazD/dxVxawfGO82HY/M
Dxs74OC54+qj80vHPFtzI/IxW+3b9P04vzZuj5yRhTpx+dV+bRfe98qiAJd+
hXY4Uu02cxnq6nFqtYTq6Ov9mq8b1/m3waT7r33iUJ9Ja7dffoO8Tb3dHltR
3wqmA6/if+C+Wn2duvnqHC7kJzzmNsm3QtXGurXrMP70c3ffheG81gjfMbvD
oQU8VZX5I3HfniaVOFkEfRewX9N0/aPvcH+R7f1VqJPZW6yvyqZywfDsR4nm
ud/h6NvBs+eQH7WbhQqXcT8QO/twmM6Hb3Dy07VEQbz+QsmiJaUpOPczeS7m
Cn8HhbbL1q04Bwfe3332MZMLw5U1QrI6LfD7c6HfqC+WFdZuMEX+R3aM7LVH
X3gJHDL6iPzKSngpZGHd32VWVKaLdkHQCv0Y5zD02xIV8cfYJ/RNN+sFfWPI
PkNdT61PxUPFT+VL8UPxSfFP1YuqL6UHSj+U3ih9Unqm9E/5hfIX5UfKv5Tf
qf5A9ZN0vs/ZnZinynfdE7J4vVdJ/oHnPF2g1SKclo59bKhIeUgb19+yZGDl
3A+dkOb8QDX1GRcmfvwVeB75TDiyRO9qIu7TJq8X6MLzo1L9FMs6jLMvztHw
xuFOuOd5e5krnkOH5ezmb8V8zV7ksKOXdsKz2pDlVqirE37uWlzsfz2Hheq5
3A4ICBTaeRvr2CyU//IBxsWbKb/zVVoHTBse+nUQ67JP7V9yBuanKTvXZIVF
B0TGCizVQZx7/qVeKV6/4O6LcP6adrimdPF4FdbXKfHa4zi87+kTRiP3l7fD
ZTf2MSXUQ+60mgxZjH+A/Tfit3cb8N1oFN2F9+09Kz9p1ejv937u7N9Y3ApL
x5cIGaPeWqOMzeuzUaezx59sa24BbqrXez6Mv1c6vWAIddv5Z+8Zz/bv4B3N
fX4W6/suYFbcJdT/zKOS23++/wYbA20VC7G+W15qQyrO/ddT/CYFpnyFPI/8
phqs7/m62rsnI3G+9xgvfPipGXb9FrgtjDw3wJQkv9H3X5y85lelWyOsPP7O
YyHm0zohYrLpaS5EH6/sThuphz/vOMKHEF8Zv/esgiuejxds/h4xrgECBd+Y
J+D6goeql4/H9X+Ip39UT28Gm51PDQZx376l9MRjWzxH59mcUNa52gq2RV2r
tdO4cIc3VLAM/f7TyVBT3JVF9hnqemp9Kh4qfipfih+KT4p/ql5UfSk9UPqh
9Ebpk9IzpX/KL5S/KD9S/qX8TvUHqp80Dz2reof9ccKJpcfOI24SzhPyuLcT
mmyN+O89xX2n9/3NObhOWNGqjxOedkJ+6EKBT8+xfif+PP+H921Xkts1FNIJ
PmqBspuwjgkLjfPssU++LcjgG8Fzotx3IQshnC/R25Zl/8K8njUujN4/vROY
RVv6VmK9pJz7FO9j/3vHlBdurO4At4vM19qa0df7bpXEYFxHdjX+jvfpgF8+
fRlc5HmK891uJeR5nf6ERz6zOmD/zO1CZ3G/mvOgU0Mc1wkpOSnc69kOLfWX
VRpwHd6OWqcI5O1aQUjbpqo2+GrdPmEczoXVvFMgYfT1dhWJV5kT2kBbCvRa
MJ7y5Ot+0ji/7DvshXfORl/cjuM4Y73+PJqytjUD96uhue+3SLRARsHzoETU
p67SG7kG1Kfkq2m/lb5/gzmfs/6aIQ9789/9eReHc3bo/s1e968Q57v6hzvy
1nbyxpsrEVxIWf45/fLdJhjRmmVkhXP0a4yt9js99OucDo/ga/WwrO94d/Mh
nI8Re4eK93fDODjjY3q+FoJYWToes3AeK94SdrbhwJF8/VVRGp9gRuMhi/hP
3cCjpuVu78IGb2b73IkiH+FNxZTzZQXd4LFCYprTdDYod7hsD1vxAWbLcVnB
qnh+VlmsNDeVAzO4vyecf/8Jct9VWM1D/Qf/XFq7FOv49+rVhUPsNrLPUNdT
61PxUPFT+VL8UHxS/FP1oupL6YHSD6U3Sp+Unin9U36h/EX5kfIv5XeqP1D9
5G+l7IO9GPeTk6KzChEfF72641JnJ9RZXOVsw/3SlYk26/txnQX7yisDH3ZC
m79TQ+jo/mqVTKwB8iOqOvlLjxfeN3TRm5nlXOA81/N4inEqakmYSOt2wmml
uQqTcL96+kX5n33YV6O/HH6yfGInrJ1q0rMH551Y8ImtStj/FPVfLjR63AEv
DVaEqCPPS0zNZ4zyuTeZ/UD5aAfs0TL84o88M26uLGPMY8/17HLr3nZYm1eX
NoI6/3dszXh+XN/R16cxwaAd+uwcP2gi/z2e+w8bIz+1z8piRUPaYI28Z5UW
9v83FrfsJuPcWWVXvvXN/VYoKBwK7sP9p83MpDKp0ee0K78/dXjUArPEYhU2
YPzB7kt7TNOxryeWXXMJ+w7hBQ61QjgXosS10txvciHDViMtQOMbPE9UG1yB
c6FjR4uXbhQXZApeWMot+gJO8k5WwliX4uxxCyMv4ZwZ93RQb3kDvNshr//t
JBeOffOdnBDSDSsDKmfattVCrqOsVZkE1u9b7QU7fQ4o6X91jvpdA1GPbOIf
RnXDposyp8xuMxA/KccwfP170Dg988ylYg78q1Y+HQqojxUF50yev4PdxT3b
+grZYNYWKBmO+37RG/PibHSrYLmn3qHwGWyIkXv64YDhN1BW+z1x7tJKGL/o
fnONRjeYZRkJHpBlwaTzR4+4B1STfYa6nlqfioeKn8qX4ofik+KfqhdVX0oP
lH4ovVH6pPRM6Z/yC+Uvyo+Ufym/U/2B6if+39a6XEI82yqpoQrxHdoZcafb
OiHQSsP5Iq4T67y6XAB5CM1JWM2b2wkG0oc8q/C+s4RsfA7gfXPqQ598P9sJ
5z7mbLDFOH8NKJ74inFalgVGH9LqhAn+mmGWmNdAd1CrN+a1+IFq/mMe3Hf1
zpzxBHk4c//i9h3Iwz3tyvvfHnaAgMlTmXTkzf1AxcPdGFeP2eRLYXYd0Oor
H3kAeRZ5+O30eOT5WPiEozbf20FY0J/7Eeui438wMRP786VrDgmnVrZDRnLT
QSGs45bszYbNyMN3b+Nxr0+1gZula8A4rLtb6bXXZ3E/f1zT/77gjVbg83D+
moA6qVv8pftgFhc+8RxfsTG8Ba7d27izBvv/zO5Ad8fR9wcz2/9bwPY7PLzG
jTiP+crlevkZJSL/7xU/nfn9FWR19zaeRn7GF7vHZ97gghqjs+elXzN46nly
lqDOtjqvCHlhNfr3bTcnO72uh3j+6mCf/Xg+f+Op2aPXDTnvhWSX6tbCt4yl
GZsGu2GhuXSzyhc2ZMp01Azw1YDHTc25B7Z2A59ccP2tEBZEWXec+ZBbDTMt
9s2DlRwI9z7VP0mlHeaN57UKa3oLCy+7bt70hoGptqfl46u/gP/v2OqniypA
4hVbyU2BBeKWmh9EFz8BTeEHjlJ8z2Ft+LwzesCCuw8TbvBMegYLH30U0tv3
nOwz1PXU+lQ8VPxUvhQ/FJ8U/1S9qPpSeqD0Q+mN0ielZ0r/lF8of1F+pPxL
+Z3qD1Q/GdvPjO1nxvYzY/uZ/3o/M/b6zNjrM2Ovz4y9PvNfvz4z9vumsd83
jf2+aez3Tf/175vGnp8Ze35m7PmZsedn/uvnZ8aeBx57HnjseeCx54H/6+eB
x/6+aezvm8b+vmns75v+679vGvt77bG/1x77e+2xv9f+r/9ee+z9Z8bef2bs
/WfG3n/mv37/mbH30xt7P72x99Mbez+9//r99MbeH3js/YHH3h947P2B/+v3
Bx77vIOxzzsY+7yDsc87+K8/72Ds85vGPr9p7PObxj6/6b/+/Kaxz6Mc+zzK
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
B6FNOR8=
       "], {{-2.9375, -2.9375}, {2.9375, 2.9375}}, {0, 1}],
      Frame->Automatic,
      FrameLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      FrameTicks->{{{{-2., 
           FormBox[
            RowBox[{"-", "2.`"}], TraditionalForm]}, {-1., 
           FormBox[
            RowBox[{"-", "1.`"}], TraditionalForm]}, {0., 
           FormBox["0", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}, {2., 
           FormBox["2.`", TraditionalForm]}}, {{-2., 
           FormBox[
            RowBox[{"-", "2.`"}], TraditionalForm]}, {-1., 
           FormBox[
            RowBox[{"-", "1.`"}], TraditionalForm]}, {0., 
           FormBox["0", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}, {2., 
           FormBox["2.`", TraditionalForm]}}}, {{{-2., 
           FormBox[
            RowBox[{"-", "2.`"}], TraditionalForm]}, {-1., 
           FormBox[
            RowBox[{"-", "1.`"}], TraditionalForm]}, {0., 
           FormBox["0", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}, {2., 
           FormBox["2.`", TraditionalForm]}}, {{-2., 
           FormBox[
            RowBox[{"-", "2.`"}], TraditionalForm]}, {-1., 
           FormBox[
            RowBox[{"-", "1.`"}], TraditionalForm]}, {0., 
           FormBox["0", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}, {2., 
           FormBox["2.`", TraditionalForm]}}}},
      ImageSize->300,
      PlotRangeClipping->True], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     GraphicsBox[RasterBox[CompressedData["
1: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
60SCkxCsluz6qrGNwPr/AB7c0iw=
       "], {{-0.05, -1.01}, {
       0.15000000000000002`, 1.01}}, {0, 1}],
      Frame->Automatic,
      FrameLabel->{None, None},
      FrameTicks->{{None, {{-1., 
           FormBox[
            RowBox[{"-", "1.`"}], TraditionalForm]}, {-0.8, 
           FormBox[
            RowBox[{"-", "0.8`"}], TraditionalForm]}, {-0.6, 
           FormBox[
            RowBox[{"-", "0.6`"}], TraditionalForm]}, {-0.3999999999999999, 
           FormBox[
            RowBox[{"-", "0.3999999999999999`"}], 
            TraditionalForm]}, {-0.19999999999999996`, 
           FormBox[
            RowBox[{"-", "0.19999999999999996`"}], TraditionalForm]}, {0., 
           FormBox["0.`", TraditionalForm]}, {0.20000000000000018`, 
           FormBox["0.20000000000000018`", TraditionalForm]}, {
          0.40000000000000013`, 
           FormBox["0.40000000000000013`", TraditionalForm]}, {
          0.6000000000000001, 
           FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
           FormBox["0.8`", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}}}, {None, None}},
      ImageSize->{60, 300},
      PlotRangeClipping->True], {480., -157.5}, 
     ImageScaled[{0.5, 0.5}], {60, 300}]}, {}},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.459173017974818*^9, 3.459173062775857*^9}, 
   3.459226394275069*^9, 3.4592270261482763`*^9, 3.459227998838039*^9, 
   3.459746039874831*^9, {3.459746747477433*^9, 3.459746769378893*^9}, 
   3.45974859966164*^9, 3.460186796453534*^9, {3.476103592372759*^9, 
   3.4761036098737097`*^9}, 3.4761726298538647`*^9, 3.4762896875851393`*^9, 
   3.4762897483735437`*^9, 3.476289809607814*^9, 3.4765128835332527`*^9, 
   3.476512914049638*^9}]
}, Open  ]],

Cell["\<\
(Note that the Cartesian components of g are not spherically symmetric.)\
\>", "Text",
 CellChangeTimes->{{3.459228560470134*^9, 3.459228581211562*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetOrigin", "[", "gxx", "]"}]], "Input",
 CellChangeTimes->{{3.459169576104053*^9, 3.459169579142589*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.875`"}], ",", 
   RowBox[{"-", "2.875`"}], ",", 
   RowBox[{"-", "2.875`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4591695795547447`*^9, 3.459226410137617*^9, 
  3.459746773262966*^9, 3.4601868056594687`*^9, 3.476103617855389*^9, 
  3.476172630054741*^9, 3.476289687615274*^9, 3.4762897484455976`*^9, 
  3.4762898096647577`*^9, 3.4765128835664473`*^9, 3.476512914262648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSpacing", "[", "gxx", "]"}]], "Input",
 CellChangeTimes->{{3.45916958050872*^9, 3.459169584393606*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.125`", ",", "0.125`", ",", "0.125`"}], "}"}]], "Output",
 CellChangeTimes->{3.459169584794242*^9, 3.4592264126970987`*^9, 
  3.459746776192247*^9, 3.460186806591148*^9, 3.476103619054201*^9, 
  3.476172630126986*^9, 3.476289687645914*^9, 3.476289748494048*^9, 
  3.476289809697884*^9, 3.4765128836199007`*^9, 3.476512914303055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetDimensions", "[", "gxx", "]"}]], "Input",
 CellChangeTimes->{{3.4591695858793716`*^9, 3.459169588774889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"47", ",", "47", ",", "47"}], "}"}]], "Output",
 CellChangeTimes->{3.4591695892285967`*^9, 3.459226413491551*^9, 
  3.459746777093544*^9, 3.460186807468309*^9, 3.476103619902261*^9, 
  3.47617263019829*^9, 3.476289687679302*^9, 3.476289748544717*^9, 
  3.476289809750821*^9, 3.4765128836491013`*^9, 3.476512914368945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xMin", ",", "xMax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yMin", ",", "yMax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"zMin", ",", "zMax"}], "}"}]}], "}"}], "=", 
  RowBox[{"GetDataRange", "[", "gxx", "]"}]}]], "Input",
 CellChangeTimes->{{3.459232731973249*^9, 3.459232758428958*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.875`"}], ",", "2.875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.875`"}], ",", "2.875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.875`"}], ",", "2.875`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.459232749735952*^9, 3.45923275903049*^9}, 
   3.45923280981644*^9, 3.459746789703394*^9, 3.460186809195813*^9, 
   3.476103621899262*^9, 3.4761726302555428`*^9, 3.476289687716094*^9, 
   3.476289748610581*^9, 3.47628980979659*^9, 3.4765128837148933`*^9, 
   3.476512914440789*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetVariableName", "[", "gxx", "]"}]], "Input",
 CellChangeTimes->{{3.459169720369543*^9, 3.4591697235143757`*^9}}],

Cell[BoxData["\<\"ADMBASE::gxx\"\>"], "Output",
 CellChangeTimes->{3.4591697239033813`*^9, 3.459226415268776*^9, 
  3.45974679223804*^9, 3.460186812001871*^9, 3.476103622863757*^9, 
  3.476172630325987*^9, 3.476289687751058*^9, 3.47628974867769*^9, 
  3.476289809859387*^9, 3.476512883750437*^9, 3.476512914506983*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gxxFn", "=", 
  RowBox[{"Interpolation", "[", "gxx", "]"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.875`"}], ",", "2.875`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.875`"}], ",", "2.875`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.875`"}], ",", "2.875`"}], "}"}]}], "}"}], 
    ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{
  3.459173689533051*^9, {3.459173723972555*^9, 3.459173742503631*^9}, 
   3.4591737919601583`*^9, 3.459226417878683*^9, 3.4597467932515097`*^9, 
   3.460186814021682*^9, 3.4761036237868633`*^9, 3.47617263050517*^9, 
   3.476289687840022*^9, 3.4762897487811527`*^9, 3.476289810023048*^9, 
   3.476512883803052*^9, 3.4765129147094097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gxxFn", "[", 
  RowBox[{"1.0", ",", "1.5", ",", "2.0"}], "]"}]], "Input",
 CellChangeTimes->{{3.459169737381481*^9, 3.459169746561713*^9}}],

Cell[BoxData["1.102452600373546`"], "Output",
 CellChangeTimes->{3.459169747374052*^9, 3.459226420698276*^9, 
  3.459746794407493*^9, 3.460186815339528*^9, 3.476103625309433*^9, 
  3.4761726305529413`*^9, 3.476289687887061*^9, 3.476289748865937*^9, 
  3.476289810198813*^9, 3.476512883849627*^9, 3.4765129147511587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gxxFn", "[", 
    RowBox[{"x", ",", "0", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.459234090957212*^9, 3.4592341622443666`*^9}, {
  3.45974680185085*^9, 3.4597468323271837`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
AN7LRuY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 2.},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.459234102859395*^9, 3.459234127153316*^9}, {
   3.459234157893614*^9, 3.459234162575089*^9}, {3.459746795751175*^9, 
   3.459746832653748*^9}, 3.460186817930787*^9, 3.476103627720839*^9, 
   3.476172630786687*^9, 3.476289688027626*^9, 3.476289748925802*^9, 
   3.476289810258768*^9, 3.4765128839461517`*^9, 3.476512914985332*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"gxxFn", "[", 
    RowBox[{"x", ",", "y", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "yMin", ",", "yMax"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.459227128300932*^9, 3.459227166341805*^9}, {
  3.459746837593474*^9, 3.459746844158813*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
+H8AZJf6/w==
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
fA==
        "]], PolygonBox[CompressedData["
1:eJwtkkkvpVEQhr/vxB8gSLOzFZFYYqPxC8QPMK1ZSoihSbehaVPM93K7zVM6
pNHpNksTNBILVuIP2Np73lQtntRb93y3TtVbJ6+uqaoxRFFUBGnwk+Q0jqJW
9BJ6A36TF8AceguO0SXwA73peRPft6H7oQoy4Qx24Znzj7CI/gP1fPtG/hfd
AxmQDifQHuzuMuItjEEu5MAVDEAL5x+IF9ABbeQv1NtHfw/Wi3pSr63QQJ5F
PIck1EY2k2ZbhvLYZtbs48Fm0/83/U7d3c5/RomHwXpXzQPvWb3XkDcTR6CC
8xR0oz8H8y4Bn9ApKEQ/wDZ6wfuVR/JqNZhXyve85yz3VN5+8/M+mHAP5EU1
DEIC8mObcRa9DpWxebSG/g9P5MVwjb7zXZWSfw3Wk3rTjuZ9B9rFK79dBuvp
2fe9ot37mXZyFKyGamUT76HTvVMPU8F6Vu/yfBi9A4+xvQG9BXmW8vcypG99
H0noCrZj7VoeT6L/Bbsr19+KZtJsqnmDnvbdyJOZYDtI+PvtDVZTtbWTL+5h
tXv0i/gOfzNr2g==
        "]]}]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJztenlUjf3XdzKmkDKrlCGzRBKpHbcMRSpukoikEhKFxG2ekqFISEiapEmD
IbNIpUlzKjpjp845ScpU8py1+vRb673Wutb9et/nef7yj9baa699ffZnz99D
y2Gr9QZ5OTm5PNk/nWV/594s0ot6XEZ3jy58lN4vm3bZ//32lpaAhh9PDPWf
WkZbPeb5Buhl0cX8cuWrz/i0t7FRaaRrKTWYxZgN83pNykkOhkpT+ZQj7yZt
WVdC2k+6aRznpFG/FHmzDbt5VCF39G5vnWJ6ce5osfPmp/TF98W0+BtcilUT
7wuWKyKTuIkpdXr3qPuYGJNhORxytg3tkqdWSF4Oz5f5d7lDNhbaGl0ncmgn
p3vN0tcFtFreXEHNMZZSj/y19VNDNW2A/hbor4A+m/0OPPcYeLKBX4uBn81f
Nn7Y+NzllvuRM+YdHZiV795wMJ94Op3HfdIU0h1BwQfFR+UU8tMp1tknj/w/
DXb1KBJQt3hvr37fy8j01vB0V142XbukOmaLuYAue6/rn55fSj//KdbpVpVB
P3TLBRP38Om1wz9OZotKqLXn0M8DAtMo6Pw8fW1XHo0pexqoGV5E2ap/PVeL
fUj+UW7cJyZcqu6htuTK4kJKS5mu37QikRIs7hRZLmHnmU1fG/ZfwL4f7LPh
CQT+b8D/DfjZ/GXjh43PwPqLTvuqKqiTYqX/gN2F9CJlWLfspTXkNVV/RmFi
BUXXLlIXTiqkn4pJg/OmyeS9LozR1aygNUbhZz7pFFB6olPTs1whNd6f0jDg
e7mM35H9Syfl0+Vmx/m2vwT03nbgzvEjyuijzsuzp1syaaj5Qd8BKXy6FeDu
bJZTTNH3T2R6VD6nrZtvufOVeaSyJS3U9HYhnbHKPrWel0zjXnOVRvmz88ym
Hwn74bDvBvuVwFMHPEOApwH4vwH/JeBn85eNHzY+h7wSrv+eX0XxXhsfnqoq
oa7LviwoSRRR1PucxmC192TSqSVVeV0pnZdbO+VXjUx+7/jboV3fU6hhm98U
g1Iy3+9h7l0qIv9ofT8X/Soq1HObmZNfTHXuXYV680TkGeE9Rn1+Bb3//GXO
NY8CKrqi8mJonZAkz45tiOpdRraj3uvOSM4kh+URPWMi+JS8Kqlq+84ieik0
cdzlkkqJijv2NQzjsvKcBP1Uhr4I9i1gfy3sbwOeMuB5Czxs+CPg7w34awZ/
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
F9L8WHY3lPewKlKqpGvchbaObwrp1OiF15V31NCZL+tCOyW/p41nRCMWuZTR
fXmrnA3WtTR21epT9Kpadp/3j921oooEV0cda7EUk/y7djthsHMWdso+DfY/
84hDT5bwLz9aWU0za9PfBsVIWPt/4FtN/9gZxXT4zX1j07tPKUjvrJL2LS4Z
mW4unlVUSMVrNo1fLHeXkoqG+X2M5VCXVyuPf88vp3vPriZPKsgjJ4WjRWN4
gv989xG+OwPfffVIrSrnDY8sXtnpTkvi0UnFR2vLR0rJFfk2HPn2HPl27bSe
+vxGmZ5mwJRun3jUI1Gl9oEsb+9GnDzfzOXQ6jmrVA4FV5P3A7V9F7jsfqme
CxT1H1lCR540GMzvmUbLYz1P8hfzaLuFclPr2zLqaZPVw3tVNqktefjys46A
ekLfAfqW0Le8sjx6/IVqyhWUHJyfUEnZ08nCuZeYEoFnBfB4Ak9Rva+OuhGX
Vn5Mirw+hUPr7AdfezFUSifE33+Yyvbxx6sF52PlOdSn9MqufjL5RKV/rvUO
5NPU6qE9JnzjU9qZ3ak7xkopeHmWdlt3IQVsS519xqyGHMzXxfJlfWBzjeOw
cao8ajYs7u97UnYPLIl8e1NTShVDbmZNaRaT34ChSj8WSkgUNjxAJ0rMyk9t
fP9L0SY8Gv5CsSGikEv2K+euidWSkhPsi2F/F+yXQb879NdA3zb6S/aDLCGl
zzVr3XpYRM3nJ478W19KV4E/kIl/P1ejyLOWrFyFU908xcTfpDxO5bWEVNGf
nzDmwq0rg7/mjxJQF8mqsaM/CCipeX3KowlSioK8E0N+6EnL5DPzhbTd+oYg
LqGGvFV1b6yYyq4fNcV4aeS2Wsp9PX2MvYeYIvhp5vsyJKQCPI8Y88LvcvdO
kX4SastV7fb2HwndekW1Jx3EFACe2zq385zbUV/Q/wX9SOibrliSNKKfiFou
29++G1BH6sHbgkqN2P117RJ0JU52t32tizTgqgjoiM3uZyWyPHE6k1yZnSSk
iMZfhkFrRGRg0mqTN42dZzacXxHfGYjvWsRXCLkGI0+EyLfzyDc+8i0GfOaB
zzDweRhx8URcdiMu15Anlxh5shZ59ZaRVzuQn/Kz/s/8f4x6dEE9HvqX/jAA
9X4G9b4S9b4V9r8z6qs39LdD3xr6bH3sOvy6zPCrEn0yDX3SGH1yEvqAPqMP
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
Xu5uyQ==
    "]],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-2.875, 2.875}, {-2.875, 2.875}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.459227148468796*^9, 3.459227167037045*^9}, 
   3.4597468453007936`*^9, 3.460186821707485*^9, 3.4761036288560963`*^9, 
   3.476172631195622*^9, 3.476289688079996*^9, 3.476289749281583*^9, 
   3.476289810348003*^9, 3.476512883988325*^9, 3.476512915133123*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1134, 672},
WindowMargins->{{37, Automatic}, {15, Automatic}},
ShowSelection->True,
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 152, 2, 76, "Title"],
Cell[722, 26, 98, 1, 46, "Subtitle"],
Cell[CellGroupData[{
Cell[845, 31, 101, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[971, 36, 170, 3, 27, "Input"],
Cell[1144, 41, 427, 6, 27, "Output"]
}, Open  ]],
Cell[1586, 50, 230, 4, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1853, 59, 98, 1, 67, "Section"],
Cell[1954, 62, 900, 16, 71, "Text"],
Cell[CellGroupData[{
Cell[2879, 82, 239, 5, 34, "Subsection"],
Cell[3121, 89, 1820, 36, 161, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4978, 130, 116, 1, 34, "Subsection"],
Cell[5097, 133, 541, 9, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5675, 147, 137, 1, 34, "Subsection"],
Cell[5815, 150, 822, 29, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6674, 184, 123, 1, 34, "Subsection"],
Cell[6800, 187, 212, 6, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7049, 198, 131, 2, 34, "Subsection"],
Cell[7183, 202, 723, 15, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7943, 222, 102, 1, 34, "Subsection"],
Cell[8048, 225, 180, 4, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8265, 234, 149, 2, 34, "Subsection"],
Cell[8417, 238, 890, 27, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9344, 270, 147, 2, 34, "Subsection"],
Cell[9494, 274, 456, 19, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9987, 298, 151, 2, 34, "Subsection"],
Cell[10141, 302, 474, 19, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10652, 326, 155, 2, 34, "Subsection"],
Cell[10810, 330, 464, 19, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11311, 354, 109, 1, 34, "Subsection"],
Cell[11423, 357, 209, 4, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11669, 366, 154, 2, 34, "Subsection"],
Cell[11826, 370, 728, 27, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12591, 402, 103, 1, 34, "Subsection"],
Cell[12697, 405, 198, 4, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12932, 414, 108, 1, 34, "Subsection"],
Cell[13043, 417, 274, 9, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13354, 431, 111, 1, 34, "Subsection"],
Cell[13468, 434, 844, 17, 56, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14349, 456, 212, 3, 34, "Subsection"],
Cell[14564, 461, 904, 19, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15505, 485, 302, 6, 34, "Subsection"],
Cell[15810, 493, 672, 15, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16519, 513, 160, 2, 34, "Subsection"],
Cell[16682, 517, 546, 13, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17265, 535, 133, 1, 34, "Subsection"],
Cell[17401, 538, 550, 9, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17988, 552, 98, 1, 34, "Subsection"],
Cell[18089, 555, 197, 4, 26, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18335, 565, 143, 2, 67, "Section"],
Cell[18481, 569, 180, 4, 20, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18698, 578, 202, 3, 67, "Section"],
Cell[CellGroupData[{
Cell[18925, 585, 443, 8, 27, "Input"],
Cell[19371, 595, 556, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19964, 608, 235, 5, 27, "Input"],
Cell[20202, 615, 443, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20682, 627, 283, 7, 27, "Input"],
Cell[20968, 636, 31715, 541, 342, "Output"]
}, Open  ]],
Cell[52698, 1180, 162, 3, 26, "Text"],
Cell[CellGroupData[{
Cell[52885, 1187, 130, 2, 27, "Input"],
Cell[53018, 1191, 436, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53491, 1205, 130, 2, 27, "Input"],
Cell[53624, 1209, 373, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54034, 1220, 136, 2, 27, "Input"],
Cell[54173, 1224, 360, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54570, 1235, 384, 11, 27, "Input"],
Cell[54957, 1248, 626, 16, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55620, 1269, 138, 2, 27, "Input"],
Cell[55761, 1273, 318, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56116, 1282, 95, 2, 27, "Input"],
Cell[56214, 1286, 838, 23, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57089, 1314, 163, 3, 27, "Input"],
Cell[57255, 1319, 320, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57612, 1328, 381, 9, 27, "Input"],
Cell[57996, 1339, 9939, 167, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67972, 1511, 410, 10, 27, "Input"],
Cell[68385, 1523, 21835, 368, 378, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
