(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     14402,        420]
NotebookOptionsPosition[     11943,        330]
NotebookOutlinePosition[     12302,        346]
CellTagsIndexPosition[     12259,        343]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["GridFunction package", "Title",
 CellChangeTimes->{{3.459169172333535*^9, 3.4591691768425713`*^9}, {
  3.459226336613926*^9, 3.459226338129665*^9}, {3.499106837391576*^9, 
  3.499106839186523*^9}}],

Cell["by Ian Hinder and Barry Wardell", "Subtitle",
 CellChangeTimes->{{3.459169180066674*^9, 3.45916918146587*^9}, {
  3.499106841122445*^9, 3.499106843650227*^9}}],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 CellChangeTimes->{{3.459166350518454*^9, 3.459166352004354*^9}}],

Cell[TextData[{
 "The \"GridFunction\" ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " package provides a simple interface to grid function data from numerical \
simulations.  It currently reads HDF5 files produced by Carpet and returns \
variables as DataRegion objects."
}], "Text",
 CellChangeTimes->{{3.4591663565326357`*^9, 3.45916646538999*^9}, {
  3.4591691557265778`*^9, 3.459169157715364*^9}, {3.459169640148758*^9, 
  3.459169695879444*^9}, {3.459226642284112*^9, 3.459226644425263*^9}, {
  3.459226699296678*^9, 3.459226700685444*^9}, {3.46018633516635*^9, 
  3.460186366749649*^9}, {3.4761026094896393`*^9, 3.4761026544869223`*^9}, {
  3.499106872186987*^9, 3.499106967550877*^9}}],

Cell[CellGroupData[{

Cell["Common arguments", "Subsection",
 CellChangeTimes->{{3.4991070107843113`*^9, 3.499107017526222*^9}}],

Cell[TextData[{
 "Most of the functions in this package take at least two arguments: ",
 StyleBox["run",
  FontSlant->"Italic"],
 " and ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.499107024933978*^9, 3.49910721667152*^9}}],

Cell[CellGroupData[{

Cell["\<\
run: The name of the run directory containing grid function files.\
\>", "Item",
 CellChangeTimes->{{3.4991072056156797`*^9, 3.499107213290215*^9}, {
  3.499108098534628*^9, 3.4991081193413143`*^9}}],

Cell["\<\
var: The name of the file containing grid function data, for example \
gxx.xy.h5.  If there is only one variable in the file, this is sufficient to \
identify the variable. If there is more than one variable, an additional \
Variable argument must be supplied to identify the variable to read.  For \
multi-file data, the .file_X.h5 suffix can be ommitted.\
\>", "Item",
 CellChangeTimes->{{3.499107213935302*^9, 3.499107269013647*^9}, {
  3.499108122726406*^9, 3.499108128981629*^9}, {3.499109655305409*^9, 
  3.499109708257783*^9}}]
}, Open  ]],

Cell["The following options can be given:", "Text",
 CellChangeTimes->{{3.499107491607873*^9, 3.499107499013721*^9}}],

Cell[TextData[{
 StyleBox["Option\t\t\tDefault\t\t\tDescription\n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "Iteration\t\tFirst in file\t\tThe integer iteration to read\n\
RefinementLevel\tCoarsest in file\t\tThe integer refinement level to read\n\
Map\t\t\tLowest in file\t\tThe map to read (use None for unimap data)\n\
Variable\t\tFirst in file\t\tThe variable to read (for files with more than \
one variable)"
}], "Text",
 CellChangeTimes->{{3.499107696481138*^9, 3.49910780879251*^9}, {
  3.499107903124168*^9, 3.499107911987774*^9}, {3.499108079610465*^9, 
  3.499108083807473*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadGridFunction[run, varfile]", "Subsection",
 CellChangeTimes->{{3.45974862993289*^9, 3.4597486403965473`*^9}, {
  3.476102680981883*^9, 3.4761026895815496`*^9}, {3.499107279525422*^9, 
  3.499107307356555*^9}}],

Cell["Common options : RefinementLevel, Map, Variable", "Text",
 CellChangeTimes->{
  3.499111672792008*^9, {3.4991128663839827`*^9, 3.499112880452833*^9}}],

Cell[TextData[{
 "Read a grid function from the file ",
 StyleBox["varfile",
  FontSlant->"Italic"],
 " in ",
 StyleBox["run",
  FontSlant->"Italic"],
 " and return it as a DataRegion. "
}], "Text",
 CellChangeTimes->{3.4991085389021873`*^9}],

Cell[TextData[{
 "This function reads a variable from a Carpet HDF5 file and returns it as a \
single DataRegion object. \n1D, 2D and 3D variables are currently supported.  \
If the file is part of a multi-file set, all the files will be used to read \
the variable. \n\nIf there is more than one component, the components will \
all be read and joined together into a single rectangular DataRegion.  If the \
union of the components is not rectangular, the smallest rectangular region \
surrounding all components will be used, and points not in any component will \
take the value None.\n\nFor debugging, it can be helpful to know which parts \
of a HDF5 file are being read and when. Specifying the option \
VerboseRead->True, will make ReadCarpetHDF5[...] output verbose information \
about what it is doing. \n\nIf the file appears in more than one segment, the \
correct segment for the given iteration will be located automatically.\n\nIn \
addition to the common options listed under ",
 StyleBox["Common Arguments",
  FontSlant->"Italic"],
 ", the following options can be given:"
}], "Text",
 CellChangeTimes->{{3.499107300804617*^9, 3.499107344571196*^9}, {
  3.499108160339478*^9, 3.499108277840341*^9}, {3.4991083270225267`*^9, 
  3.499108532332892*^9}, {3.499108576022408*^9, 3.4991086435234737`*^9}, {
  3.499108739060298*^9, 3.499108739610817*^9}, {3.499108773233502*^9, 
  3.4991088293735743`*^9}}],

Cell[TextData[{
 StyleBox["Option\t\t\tDefault\t\t\tDescription\n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "StripGhostZones\tTrue\t\t\tRemove the ghost zones from the data\n\
VerboseRead\t\tFalse\t\t\tOutput status information as the data is being \
loaded\nMap\t\t\tLowest in file\t\tThe map to read (use None for unimap data)\
\nVariable\t\tFirst in file\t\tThe variable to read (for files with more than \
one variable)"
}], "Text",
 CellChangeTimes->{{3.499107696481138*^9, 3.49910780879251*^9}, {
  3.499107903124168*^9, 3.499107911987774*^9}, {3.499108079610465*^9, 
  3.499108083807473*^9}, {3.499108655206847*^9, 3.4991087753853407`*^9}, {
  3.499108837736837*^9, 3.4991088383014183`*^9}, {3.499111643681727*^9, 
  3.4991116445912724`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadIterations[run, var]", "Subsection",
 CellChangeTimes->{{3.4991089762107153`*^9, 3.499108982440639*^9}}],

Cell["Common options: RefinementLevel", "Text",
 CellChangeTimes->{{3.4991092025935373`*^9, 3.4991092248968687`*^9}, {
  3.499112888423414*^9, 3.4991128941341143`*^9}}],

Cell["\<\
Read the iteration numbers present in the file.  If RefinementLevel, Variable \
or Map are specified, then only iterations corresponding to those will be \
included.\
\>", "Text",
 CellChangeTimes->{{3.499108986024704*^9, 3.499109051014471*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadMaps[run, var]", "Subsection",
 CellChangeTimes->{{3.499109055758225*^9, 3.499109063182144*^9}}],

Cell["Read the maps present in the file.", "Text",
 CellChangeTimes->{{3.499109064774063*^9, 3.4991090702379293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadRefinementLevels[run, var]", "Subsection",
 CellChangeTimes->{{3.49910907294989*^9, 3.499109077653674*^9}}],

Cell["Read the refinement levels present in the file.", "Text",
 CellChangeTimes->{{3.499109079333454*^9, 3.499109088693239*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadTimeLevels[run, var]", "Subsection",
 CellChangeTimes->{{3.499109093389098*^9, 3.4991090977730007`*^9}}],

Cell["Read the timelevels present in the file.", "Text",
 CellChangeTimes->{{3.4991090991728153`*^9, 3.499109104652755*^9}, 
   3.499109137379822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadVariables[run, var]", "Subsection",
 CellChangeTimes->{{3.499109107772709*^9, 3.499109124436202*^9}}],

Cell["Read the names of the variables present in the file.", "Text",
 CellChangeTimes->{{3.499109126804002*^9, 3.4991091340198097`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ReadTime[run, var]", "Subsection",
 CellChangeTimes->{{3.499109530975375*^9, 3.49910953423109*^9}}],

Cell["Common options : RefinementLevel, Map, Variable", "Text"],

Cell["Read the coordinate time associated with this grid function.", "Text",
 CellChangeTimes->{{3.499109536486927*^9, 3.499109545406723*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes", "Section",
 CellChangeTimes->{{3.459169054485798*^9, 3.4591690562173986`*^9}, {
  3.459169092773025*^9, 3.4591690934040537`*^9}}],

Cell["Reading files from multi-segment runs is not yet supported", "Item",
 CellChangeTimes->{{3.459226952306826*^9, 3.459226983641799*^9}, {
  3.499108905444812*^9, 3.499108918410676*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Section",
 CellChangeTimes->{{3.459169555544169*^9, 3.459169558382086*^9}, {
  3.45922701103588*^9, 3.459227012032732*^9}, {3.4592279484789467`*^9, 
  3.459227978313953*^9}, {3.499108924050786*^9, 3.499108924749528*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.459158306133925*^9, 3.459158313436741*^9}}],

Cell[BoxData["\<\"/Users/ian/Projects/Code/nrmma/doc\"\>"], "Output",
 CellChangeTimes->{
  3.4591583343145323`*^9, 3.459163030077656*^9, 3.459163085319682*^9, 
   3.459163306121868*^9, 3.459226361793635*^9, 3.460186297856682*^9, {
   3.4761034829034348`*^9, 3.476103506488287*^9}, 3.476172628731854*^9, 
   3.4762896871470613`*^9, 3.47628974806499*^9, 3.4762898089634542`*^9, {
   3.4765128830805264`*^9, 3.476512911781266*^9}, 3.49911250353294*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "GridFunction`"}]], "Input",
 CellChangeTimes->{{3.4905881640668993`*^9, 3.490588166870332*^9}, {
  3.4991068516058207`*^9, 3.499106854411313*^9}}],

Cell[BoxData[
 RowBox[{"<<", "RunFiles`"}]], "Input",
 CellChangeTimes->{{3.499112679864634*^9, 3.499112681703081*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"run", "=", "\"\<mcldiffs_macbook_prec_ord4_4\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.499112441671276*^9, 3.4991124673178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadVariables", "[", 
  RowBox[{"run", ",", "\"\<gxx.h5\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.4991124723564653`*^9, 3.499112474781663*^9}, {
  3.499112529372058*^9, 3.499112534580145*^9}, {3.499112693833366*^9, 
  3.499112693967113*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"ADMBASE::gxx\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.49911253565374*^9, {3.499112585667016*^9, 3.499112589936645*^9}, {
   3.499112684928466*^9, 3.4991126947922697`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadGridFunction", "[", 
  RowBox[{"run", ",", "\"\<gxx.h5\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.4991127365844*^9, 3.499112746142736*^9}}],

Cell[BoxData["\<\"DataRegion[ADMBASE::gxx\.93F?, {15, 15, 15}, \
\\!\\({\\(\\({0.`, 0.9333333333333337`}\\)\\), \\(\\({0.`, \
0.9333333333333337`}\\)\\), \\(\\({0.`, \
0.9333333333333337`}\\)\\)}\\)]\"\>"], "Output",
 CellChangeTimes->{3.4991127467871037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadGridFunction", "[", 
  RowBox[{"run", ",", "\"\<gxx.h5\>\"", ",", 
   RowBox[{"Iteration", "\[Rule]", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.499112757960189*^9, 3.4991127852399483`*^9}}],

Cell[BoxData["\<\"DataRegion[ADMBASE::gxx\.93F?, {15, 15, 15}, \
\\!\\({\\(\\({0.`, 0.9333333333333337`}\\)\\), \\(\\({0.`, \
0.9333333333333337`}\\)\\), \\(\\({0.`, \
0.9333333333333337`}\\)\\)}\\)]\"\>"], "Output",
 CellChangeTimes->{{3.499112761825197*^9, 3.4991127857200527`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{673, 717},
WindowMargins->{{Automatic, 9}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 203, 3, 76, "Title"],
Cell[773, 27, 165, 2, 46, "Subtitle"],
Cell[CellGroupData[{
Cell[963, 33, 98, 1, 67, "Section"],
Cell[1064, 36, 700, 13, 41, "Text"],
Cell[CellGroupData[{
Cell[1789, 53, 106, 1, 34, "Subsection"],
Cell[1898, 56, 262, 9, 26, "Text"],
Cell[CellGroupData[{
Cell[2185, 69, 209, 4, 20, "Item"],
Cell[2397, 75, 544, 9, 59, "Item"]
}, Open  ]],
Cell[2956, 87, 117, 1, 26, "Text"],
Cell[3076, 90, 596, 12, 86, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3709, 107, 219, 3, 34, "Subsection"],
Cell[3931, 112, 156, 2, 26, "Text"],
Cell[4090, 116, 242, 9, 26, "Text"],
Cell[4335, 127, 1415, 22, 236, "Text"],
Cell[5753, 151, 756, 14, 86, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6546, 170, 114, 1, 34, "Subsection"],
Cell[6663, 173, 168, 2, 26, "Text"],
Cell[6834, 177, 255, 5, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7126, 187, 106, 1, 34, "Subsection"],
Cell[7235, 190, 118, 1, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7390, 196, 117, 1, 34, "Subsection"],
Cell[7510, 199, 129, 1, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7676, 205, 114, 1, 34, "Subsection"],
Cell[7793, 208, 150, 2, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7980, 215, 111, 1, 34, "Subsection"],
Cell[8094, 218, 136, 1, 26, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8267, 224, 105, 1, 34, "Subsection"],
Cell[8375, 227, 63, 0, 26, "Text"],
Cell[8441, 229, 142, 1, 26, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8632, 236, 143, 2, 67, "Section"],
Cell[8778, 240, 189, 2, 20, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9004, 247, 237, 3, 67, "Section"],
Cell[CellGroupData[{
Cell[9266, 254, 170, 3, 27, "Input"],
Cell[9439, 259, 450, 6, 27, "Output"]
}, Open  ]],
Cell[9904, 268, 176, 3, 27, "Input"],
Cell[10083, 273, 119, 2, 27, "Input"],
Cell[10205, 277, 171, 4, 27, "Input"],
Cell[CellGroupData[{
Cell[10401, 285, 270, 5, 27, "Input"],
Cell[10674, 292, 211, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10922, 301, 171, 3, 27, "Input"],
Cell[11096, 306, 260, 4, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11393, 315, 223, 4, 27, "Input"],
Cell[11619, 321, 284, 4, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
