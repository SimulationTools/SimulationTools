#!/usr/bin/env RunMathematicaScript
(* -*- mode: mathematica -*- *)

$Path = Prepend[$Path, "/home/ianhin/Cactus/ETBG/repos"];

If[FindFile["SimulationTools`"] === $Failed,
  Print["Cannot find SimulationTools.  Please make sure that it is accessible on your $Path."];
  Quit[1]];

Needs["CCompilerDriver`"];
$CCompiler = {"Compiler" -> CCompilerDriver`IntelCompiler`IntelCompiler};

Get["SimulationTools`"];

SetOptions[$Output, FormatType -> OutputForm];
AbortOnMessagesST[True];

CheckAbort[

(* For testing *)
(* Print["Eccentricity=", 0.01]; *)
(* Print["NextD=", 10.1]; *)
(* Print["NextPr=", -0.004]; *)
(* Quit[0]; *)

sim = $ScriptCommandLine[[2]];
outfile = $ScriptCommandLine[[3]];

If[SimulationNames[sim] === {},
  Error["Cannot find simulation "<>sim]];
  
sep = ReadBinarySeparation[sim];
om0 = InitialOrbitalFrequency[sim];
D0 = BinaryBlackHoleParameters[sim]["D"];
params = EccentricityReductionParameters[sim];
ecc = BinaryEccentricityFromSeparationDerivative[sep, {150, 600}, 
  Inspiral -> "PN", 
  CorrectedSemiMajorAxis -> True,
  MeanMotionGuess -> om0,
  SemiMajorAxisGuess -> D0];

  f = OpenWrite[outfile];
  WriteLine[f, "Eccentricity="<>ToString[ecc["Eccentricity"], CForm]];

  {nextD, nextPr} = ReduceEccentricity[sim, ecc];

  WriteLine[f, "NextD="<>ToString[nextD,CForm]];
  WriteLine[f, "NextPr="<>ToString[nextPr,CForm]];
  Close[f];
, Quit[1]];
