#!/usr/bin/env RunMathematicaScript
(* -*- mode: mathematica -*- *)

$Path = Prepend[$Path, "/home/ianhin/Cactus/ETBG/repos"];

If[FindFile["SimulationTools`"] === $Failed,
  Print["Cannot find SimulationTools.  Please make sure that it is accessible on your $Path."];
  Quit[1]];

(* Needs["CCompilerDriver`"]; *)
(* $CCompiler = {"Compiler" -> CCompilerDriver`IntelCompiler`IntelCompiler}; *)

Get["SimulationTools`"];

SetOptions[$Output, FormatType -> OutputForm];
AbortOnMessagesST[True];

CheckAbort[

getArg[name_String] :=
  Replace[$ScriptCommandLine, 
    {{___,"--"<>name,x_,___} :> ImportString[x,"List"][[1]],
      _ :> Error["Missing argument: --"<>name]}];

getArg[name_String, default_] :=
  Replace[$ScriptCommandLine, 
    {{___,"--"<>name,x_,___} :> ImportString[x,"List"][[1]],
      _ :> default}];

M = 1;
q = getArg["q"];
chi1z = getArg["chi1z"];
chi2z = getArg["chi2z"];
omOrb = getArg["om", None];
If[omOrb === None,
  nOrbits = getArg["orbits", None];
  If[nOrbits === None,
    Error["Neither --om nor --orbits was specified; unable to determine parameters"]];

  orbsOfOm[om_?NumberQ] :=
  PostNewtonianEvolution[{M,q,chi1z,chi2z,om}]["NumberOfOrbits"];

  omOrb = om /. FindRoot[orbsOfOm[om] == nOrbits, {om, 0.01}];
  If[!NumberQ[omOrb],
    Error["Could not determine initial frequency for "<>ToString[nOrbs]<>" orbits"]]];

pn = PostNewtonianEvolution[{M,q,chi1z,chi2z,omOrb}];

params = QuasiCircularParametersFromPostNewtonian[{M, q, chi1z, chi2z, omOrb}];
Print["Q="<>ToString[q,CForm]];
Print["L="<>ToString[params["OrbitalAngularMomentum"],CForm]];
Print["D="<>ToString[params["Separation"],CForm]];
Print["PR="<>ToString[params["RadialMomentum"],CForm]];
Print["OM="<>ToString[omOrb,CForm]];
Print["ORBITS="<>ToString[pn["NumberOfOrbits"],CForm]];
Print["MERGERTIME="<>ToString[pn["TimeToMerger"],CForm]];

  , Quit[1]];
