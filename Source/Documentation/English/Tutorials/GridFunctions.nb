Notebook[{

Cell[CellGroupData[{
Cell["GridFunctions", "Title"],

Cell[TextData[{
 "SimulationTools provides an interface to grid-based data from numerical \
simulations.  It is currently capable of reading HDF5 files produced by \
Carpet and returns variables as ",
 ButtonBox["DataRegion",
  BaseStyle->"Link",
  ButtonData->"paclet:SimulationTools/ref/DataRegion"],
 " objects."
}], "Text"],

Cell[CellGroupData[{

Cell["Common Arguments", "Section"],

Cell[TextData[{
 "Most of the functions in this package take at least three arguments: ",
 StyleBox["sim,",
  FontSlant->"Italic"],
 " ",
 StyleBox["var",
  FontSlant->"Italic"],
 " and ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[BoxData[GridBox[{
   {"sim", Cell[
    "The name of the simulation containing the data to read", "TableText"]},
   {"var", Cell["The name of the grid variable", "TableText"]},
   {"dims", Cell["\<\
The dimensions to be read.These can be given either as a list of numbers of \
coordinate names ({1,2,3} or \
{\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]z\[CloseCurlyDoubleQuote]}) \
or asa combined string \[OpenCurlyDoubleQuote]xyz\[CloseCurlyDoubleQuote].\
\>", "TableText"]}
  }]], "DefinitionBox"],

Cell["Common arguments to gridfunction functions.", "Caption"],

Cell["The following options can be given:", "Text"],

Cell[BoxData[GridBox[{
   {"Iteration", "0", Cell["The iteration to read", "TableText"]},
   {"Map", "None", Cell["\<\
The map to read (use None for single map data, or an integer for multi-map)\
\>", "TableText"]},
   {"RefinementLevel", "0", Cell[
    "The refinement level to read.", "TableText"]},
   {"TimeLevel", "0", Cell["The time level to read", "TableText"]},
   {"Variable", 
    RowBox[{"First", " ", "in", " ", "file"}], Cell[
    "The variable to read", "TableText"]}
  }]], "DefinitionBox3Col"],

Cell["Common options to gridfunction functions.", "Caption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section"],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadGridFunction[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read a grid function for the variable ",
 StyleBox["var",
  FontSlant->"Italic"],
 " of dimension ",
 StyleBox["dims",
  FontSlant->"Italic"],
 " in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " and return it as a DataRegion."
}], "Text"],

Cell["\<\
This function reads a variable from a simulation and returns it as a single \
DataRegion object. 
1D, 2D and 3D variables are currently supported.  If the file is part of a \
multi-file set, all the files will be used to read the variable.\
\>", "Text"],

Cell["\<\
If there is more than one component (i.e. the data is split into separate \
parts corresponding to different processors), the components will all be read \
and joined together into a single rectangular DataRegion.  If the union of \
the components is not rectangular, the smallest rectangular region \
surrounding all components will be used, and points not in any component will \
take the value None.\
\>", "Text"],

Cell["\<\
If the file appears in more than one segment of a multi-segment simulation, \
the correct segment for the given iteration will be located automatically.  \
In addition to the common options listed above, the following option can be \
given:\
\>", "Text"],

Cell[BoxData[GridBox[{
   {"StripGhostZones", "True", Cell["\<\
Remove inter-processor ghost zones from the data\
\>", "TableText"]}
  }]], "DefinitionBox3Col"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadIterations[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the iteration numbers present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". If the options Map, RefinementLevel, TimeLevel or Variable are specified, \
then only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadMaps[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the maps present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ".  If the options Iteration, RefinementLevel, TimeLevel or Variable are \
specified, then only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadRefinementLevels[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the refinement levels present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". If the options Iteration, Map, TimeLevel or Variable are specified, then \
only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadTimeLevels[",
 StyleBox["sim",
  FontSlant->"Italic"],
 ", ",
 StyleBox["var",
  FontSlant->"Italic"],
 ", ",
 StyleBox["dims",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell[TextData[{
 "Read the timelevels present in ",
 StyleBox["sim",
  FontSlant->"Italic"],
 " for ",
 StyleBox["var",
  FontSlant->"Italic"],
 ". If the options Iteration, Map, RefinementLevel or Variable are specified, \
then only iterations corresponding to those will be included."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "FindGridFunctions[",
 StyleBox["sim",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell["\<\
Read the names of variables for which gridfunction data is available in sim.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ReadGridFunctionDimensions[",
 StyleBox["sim",
  FontSlant->"Italic"],
 "]"
}], "Subsection"],

Cell["\<\
Read the available dimensions of a gridfunction in sim.\
\>", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Section"],

Cell[TextData[{
 "Examine the variable ",
 StyleBox["phi",
  FontSlant->"Italic"],
 " from the simulation ",
 StyleBox["bbh",
  FontSlant->"Italic"],
 " in the x-y plane."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadIterations", "[", 
   RowBox[{"\"\<bbh\>\"", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], "]"}], "//",
   "Short"}]], "Input"],

Cell[BoxData[
 RowBox[{"ReadRefinementLevels", "[", 
  RowBox[{"\"\<bbh\>\"", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ReadMaps", "[", 
  RowBox[{"\"\<bbh\>\"", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ReadTimeLevels", "[", 
  RowBox[{"\"\<bbh\>\"", ",", "\"\<phi\>\"", ",", "\"\<xy\>\""}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"phi", "=", 
  RowBox[{"ReadGridFunction", "[", 
   RowBox[{"\"\<bbh\>\"", ",", "\"\<phi\>\"", ",", "\"\<xy\>\"", ",", 
    RowBox[{"Iteration", "->", "4096"}], ",", 
    RowBox[{"RefinementLevel", "\[Rule]", "3"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", "phi", "]"}]], "Input"]
}, Open  ]]
}, Open  ]]
},
Saveable->True,
WindowSize->{833, 756},
WindowMargins->{{86, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->"Default.nb"
]

